#! /usr/bin/env python
import sys

FORMAT_MAP = {'L': 'bit', 'K': 'bigint', 'J': 'int', 'I': 'smallint', 'A': 'varchar',
              'D': 'real', 'E': 'float', 'P': 'array', 'Q': 'array', 'B': 'bit'}

if __name__ == "__main__":
    path = sys.argv[1]
    hdu_index = int(sys.argv[2])

    from astropy.io import fits

    with fits.open(path) as image:
        hdu = image[hdu_index]
        
        sql_create = f"CREATE TABLE myTable (\n"

        cards = iter(hdu.header.cards)

        for col in hdu.data.columns:
            field_type = FORMAT_MAP[col.format[-1]]
            if field_type == "varchar":
                field_length = col.format[:-1]
                field_type = f"{field_type}({field_length})"

            for key, value, comment in cards:
                if value == col.name:
                    break
            else:
                raise ValueError(f"Cannot find header for column {col.name}")

            # break out the units from the comment
            if "[" not in comment:
                unit = None
                desc = f"--/D {comment}"
            else:
                unit = comment.split("[")[-1]
                comment = comment[:-(1 + len(unit))]
                # strip rhs bracket from unit
                unit = unit[:-1]
                desc = f"--/U {unit} --/D {comment}"
            sql_create += f"  {col.name} {field_type} NOT NULL, {desc}\n"

        sql_create += ");"
        
    print(sql_create)
    
    # get column info, create sql for create table
    # fits -> csv
