
from peewee import (
    AutoField,
    IntegerField,
    FloatField,
    TextField,
    ForeignKeyField,
    BigBitField,
    BigIntegerField,
    PostgresqlDatabase,
    SmallIntegerField,
    DateTimeField,
    BooleanField,
    fn,
)
from playhouse.hybrid import hybrid_method
from astra.models.base import database, BaseModel
from astra.models.fields import BitField
from astra.models.spectrum import Spectrum

from astra.glossary import Glossary

class Source(BaseModel):

    """ An astronomical source. """

    #> Identifiers
    pk = AutoField(primary_key=True, help_text=Glossary.pk)
    
    healpix = IntegerField(null=True, help_text="HEALPix (128 side)")
    # The following identifiers are usually unique, but let's not base our integrity on it because
    # there will be things with n_associated > 1.
    sdss_id = BigIntegerField(index=True, unique=True, null=True, help_text="SDSS-5 unique identifier")
    sdss4_apogee_id = TextField(index=True, unique=True, null=True, help_text="SDSS-4 DR17 APOGEE identifier")
    gaia_dr2_source_id = BigIntegerField(null=True, help_text="Gaia DR2 source identifier")
    gaia_dr3_source_id = BigIntegerField(null=True, help_text="Gaia DR3 source identifier")
    tic_v8_id = BigIntegerField(null=True, help_text="TESS Input Catalog (v8) identifier")
    
    #> Targeting provenance 
    carton_0 = TextField(default="", help_text="Highest priority carton name")
    lead = TextField(null=True, help_text="Lead catalog used for cross-match")
    version_id = IntegerField(null=True, help_text="SDSS catalog version for targeting")
    catalogid = BigIntegerField(null=True, help_text=Glossary.catalogid)
    catalogid21 = BigIntegerField(null=True, help_text=Glossary.catalogid21)
    catalogid25 = BigIntegerField(null=True, help_text=Glossary.catalogid25)
    catalogid31 = BigIntegerField(null=True, help_text=Glossary.catalogid31)
    n_associated = IntegerField(null=True, help_text=Glossary.n_associated)
    n_neighborhood = IntegerField(default=-1, help_text="Sources within 3\" and G_MAG > G_MAG_source + 5")
    
    # Only do carton_flags if we have a postgresql database.
    if isinstance(database, PostgresqlDatabase):
        sdss5_target_flags = BigBitField(null=True, help_text=Glossary.sdss5_target_flags)

        # Version 1 of SDSS2C2VB from sdss5_target_1.csv at https://data.sdss5.org/sas/sdsswork/bhm/sandbox/targeted_cartons/sdss5_target_1.csv
        flag_carton_mwm_snc_100pc_0_1_0 = sdss5_target_flags.flag(2**1, help_text="carton_pk=126")
        flag_carton_mwm_snc_250pc_0_1_0 = sdss5_target_flags.flag(2**2, help_text="carton_pk=127")
        flag_carton_mwm_cb_300pc_0_1_0 = sdss5_target_flags.flag(2**3, help_text="carton_pk=128")
        flag_carton_mwm_cb_cvcandidates_0_1_0 = sdss5_target_flags.flag(2**4, help_text="carton_pk=134")
        flag_carton_mwm_halo_sm_0_1_0 = sdss5_target_flags.flag(2**5, help_text="carton_pk=140")
        flag_carton_mwm_halo_bb_0_1_0 = sdss5_target_flags.flag(2**6, help_text="carton_pk=143")
        flag_carton_mwm_yso_s1_0_1_0 = sdss5_target_flags.flag(2**7, help_text="carton_pk=144")
        flag_carton_mwm_yso_s2_0_1_0 = sdss5_target_flags.flag(2**8, help_text="carton_pk=145")
        flag_carton_mwm_yso_s2_5_0_1_0 = sdss5_target_flags.flag(2**9, help_text="carton_pk=146")
        flag_carton_mwm_yso_s3_0_1_0 = sdss5_target_flags.flag(2**10, help_text="carton_pk=147")
        flag_carton_mwm_yso_ob_0_1_0 = sdss5_target_flags.flag(2**11, help_text="carton_pk=148")
        flag_carton_mwm_yso_cmz_0_1_0 = sdss5_target_flags.flag(2**12, help_text="carton_pk=149")
        flag_carton_mwm_yso_cluster_0_1_0 = sdss5_target_flags.flag(2**13, help_text="carton_pk=150")
        flag_carton_mwm_rv_long_fps_0_1_0 = sdss5_target_flags.flag(2**14, help_text="carton_pk=158")
        flag_carton_mwm_rv_long_bplates_0_1_0 = sdss5_target_flags.flag(2**15, help_text="carton_pk=160")
        flag_carton_mwm_ob_cepheids_0_1_0 = sdss5_target_flags.flag(2**16, help_text="carton_pk=163")
        flag_carton_mwm_rv_short_fps_0_1_0 = sdss5_target_flags.flag(2**17, help_text="carton_pk=164")
        flag_carton_mwm_rv_short_bplates_0_1_0 = sdss5_target_flags.flag(2**18, help_text="carton_pk=165")
        flag_carton_mwm_ob_core_0_1_0 = sdss5_target_flags.flag(2**19, help_text="carton_pk=236")
        flag_carton_mwm_rv_short_rm_0_1_0 = sdss5_target_flags.flag(2**20, help_text="carton_pk=241")
        flag_carton_mwm_rv_long_rm_0_1_0 = sdss5_target_flags.flag(2**21, help_text="carton_pk=242")
        flag_carton_ops_std_boss_0_1_0 = sdss5_target_flags.flag(2**22, help_text="carton_pk=257")
        flag_carton_mwm_wd_core_0_1_0 = sdss5_target_flags.flag(2**23, help_text="carton_pk=259")
        flag_carton_mwm_gg_core_0_1_0 = sdss5_target_flags.flag(2**24, help_text="carton_pk=273")
        flag_carton_mwm_planet_tess_0_1_0 = sdss5_target_flags.flag(2**25, help_text="carton_pk=274")
        flag_carton_bhm_aqmes_med_0_1_0 = sdss5_target_flags.flag(2**26, help_text="carton_pk=278")
        flag_carton_mwm_cb_gaiagalex_0_1_0 = sdss5_target_flags.flag(2**27, help_text="carton_pk=279")
        flag_carton_bhm_aqmes_med_faint_0_1_0 = sdss5_target_flags.flag(2**28, help_text="carton_pk=280")
        flag_carton_mwm_tessrgb_core_0_1_0 = sdss5_target_flags.flag(2**29, help_text="carton_pk=281")
        flag_carton_bhm_aqmes_wide3_0_1_0 = sdss5_target_flags.flag(2**30, help_text="carton_pk=286")
        flag_carton_bhm_aqmes_wide3_faint_0_1_0 = sdss5_target_flags.flag(2**31, help_text="carton_pk=287")
        flag_carton_bhm_aqmes_wide2_0_1_0 = sdss5_target_flags.flag(2**32, help_text="carton_pk=288")
        flag_carton_bhm_aqmes_wide2_faint_0_1_0 = sdss5_target_flags.flag(2**33, help_text="carton_pk=289")
        flag_carton_bhm_aqmes_bonus_dark_0_1_0 = sdss5_target_flags.flag(2**34, help_text="carton_pk=290")
        flag_carton_bhm_aqmes_bonus_bright_0_1_0 = sdss5_target_flags.flag(2**35, help_text="carton_pk=291")
        flag_carton_bhm_csc_boss_dark_0_1_0 = sdss5_target_flags.flag(2**36, help_text="carton_pk=307")
        flag_carton_bhm_csc_boss_bright_0_1_0 = sdss5_target_flags.flag(2**37, help_text="carton_pk=308")
        flag_carton_bhm_csc_apogee_0_1_0 = sdss5_target_flags.flag(2**38, help_text="carton_pk=309")
        flag_carton_bhm_gua_dark_0_1_0 = sdss5_target_flags.flag(2**39, help_text="carton_pk=310")
        flag_carton_bhm_gua_bright_0_1_0 = sdss5_target_flags.flag(2**40, help_text="carton_pk=311")
        flag_carton_ops_std_eboss_0_1_0 = sdss5_target_flags.flag(2**41, help_text="carton_pk=319")
        flag_carton_ops_sky_apogee_0_1_0 = sdss5_target_flags.flag(2**42, help_text="carton_pk=325")
        flag_carton_bhm_rm_core_0_1_0 = sdss5_target_flags.flag(2**43, help_text="carton_pk=340")
        flag_carton_bhm_rm_known_spec_0_1_0 = sdss5_target_flags.flag(2**44, help_text="carton_pk=341")
        flag_carton_bhm_rm_var_0_1_0 = sdss5_target_flags.flag(2**45, help_text="carton_pk=342")
        flag_carton_bhm_rm_ancillary_0_1_0 = sdss5_target_flags.flag(2**46, help_text="carton_pk=343")
        flag_carton_ops_std_boss_red_0_1_0 = sdss5_target_flags.flag(2**47, help_text="carton_pk=351")
        flag_carton_bhm_spiders_agn_efeds_0_1_0 = sdss5_target_flags.flag(2**48, help_text="carton_pk=356")
        flag_carton_bhm_spiders_clusters_efeds_sdss_redmapper_0_1_0 = sdss5_target_flags.flag(2**49, help_text="carton_pk=357")
        flag_carton_bhm_spiders_clusters_efeds_hsc_redmapper_0_1_0 = sdss5_target_flags.flag(2**50, help_text="carton_pk=358")
        flag_carton_bhm_spiders_clusters_efeds_ls_redmapper_0_1_0 = sdss5_target_flags.flag(2**51, help_text="carton_pk=359")
        flag_carton_bhm_spiders_clusters_efeds_erosita_0_1_0 = sdss5_target_flags.flag(2**52, help_text="carton_pk=360")
        flag_carton_mwm_cb_uvex1_0_1_0 = sdss5_target_flags.flag(2**53, help_text="carton_pk=361")
        flag_carton_mwm_cb_uvex2_0_1_0 = sdss5_target_flags.flag(2**54, help_text="carton_pk=362")
        flag_carton_mwm_dust_core_0_1_0 = sdss5_target_flags.flag(2**55, help_text="carton_pk=363")
        flag_carton_mwm_cb_uvex3_0_1_0 = sdss5_target_flags.flag(2**56, help_text="carton_pk=364")
        flag_carton_mwm_cb_uvex4_0_1_0 = sdss5_target_flags.flag(2**57, help_text="carton_pk=366")
        flag_carton_mwm_cb_uvex5_0_1_0 = sdss5_target_flags.flag(2**58, help_text="carton_pk=367")
        flag_carton_ops_sky_boss_0_1_0 = sdss5_target_flags.flag(2**59, help_text="carton_pk=368")
        flag_carton_mwm_legacy_ir2opt_0_1_1 = sdss5_target_flags.flag(2**60, help_text="carton_pk=375")
        flag_carton_ops_apogee_stds_0_1_2 = sdss5_target_flags.flag(2**61, help_text="carton_pk=376")
        flag_carton_ops_std_boss_tic_0_1_3 = sdss5_target_flags.flag(2**62, help_text="carton_pk=377")
        flag_carton_mwm_rv_long_bplates_0_1_4 = sdss5_target_flags.flag(2**63, help_text="carton_pk=378")
        flag_carton_ops_std_eboss_0_5_0 = sdss5_target_flags.flag(2**64, help_text="carton_pk=529")
        flag_carton_ops_std_boss_0_5_0 = sdss5_target_flags.flag(2**65, help_text="carton_pk=530")
        flag_carton_ops_std_boss_red_0_5_0 = sdss5_target_flags.flag(2**66, help_text="carton_pk=531")
        flag_carton_ops_std_apogee_0_5_0 = sdss5_target_flags.flag(2**67, help_text="carton_pk=532")
        flag_carton_mwm_cb_gaiagalex_apogee_0_5_0 = sdss5_target_flags.flag(2**68, help_text="carton_pk=537")
        flag_carton_mwm_cb_gaiagalex_boss_0_5_0 = sdss5_target_flags.flag(2**69, help_text="carton_pk=538")
        flag_carton_mwm_cb_cvcandidates_apogee_0_5_0 = sdss5_target_flags.flag(2**70, help_text="carton_pk=539")
        flag_carton_mwm_cb_cvcandidates_boss_0_5_0 = sdss5_target_flags.flag(2**71, help_text="carton_pk=540")
        flag_carton_mwm_galactic_core_0_5_0 = sdss5_target_flags.flag(2**72, help_text="carton_pk=544")
        flag_carton_mwm_cb_uvex3_0_5_0 = sdss5_target_flags.flag(2**73, help_text="carton_pk=547")
        flag_carton_mwm_cb_uvex4_0_5_0 = sdss5_target_flags.flag(2**74, help_text="carton_pk=548")
        flag_carton_mwm_snc_100pc_boss_0_5_0 = sdss5_target_flags.flag(2**75, help_text="carton_pk=551")
        flag_carton_mwm_snc_250pc_apogee_0_5_0 = sdss5_target_flags.flag(2**76, help_text="carton_pk=552")
        flag_carton_mwm_snc_250pc_boss_0_5_0 = sdss5_target_flags.flag(2**77, help_text="carton_pk=553")
        flag_carton_mwm_halo_sm_boss_0_5_0 = sdss5_target_flags.flag(2**78, help_text="carton_pk=557")
        flag_carton_mwm_yso_disk_apogee_0_5_0 = sdss5_target_flags.flag(2**79, help_text="carton_pk=558")
        flag_carton_mwm_yso_disk_boss_0_5_0 = sdss5_target_flags.flag(2**80, help_text="carton_pk=559")
        flag_carton_mwm_yso_embedded_apogee_0_5_0 = sdss5_target_flags.flag(2**81, help_text="carton_pk=560")
        flag_carton_mwm_yso_nebula_apogee_0_5_0 = sdss5_target_flags.flag(2**82, help_text="carton_pk=561")
        flag_carton_mwm_yso_variable_apogee_0_5_0 = sdss5_target_flags.flag(2**83, help_text="carton_pk=562")
        flag_carton_mwm_yso_variable_boss_0_5_0 = sdss5_target_flags.flag(2**84, help_text="carton_pk=563")
        flag_carton_mwm_yso_ob_apogee_0_5_0 = sdss5_target_flags.flag(2**85, help_text="carton_pk=564")
        flag_carton_mwm_yso_ob_boss_0_5_0 = sdss5_target_flags.flag(2**86, help_text="carton_pk=565")
        flag_carton_mwm_yso_cmz_apogee_0_5_0 = sdss5_target_flags.flag(2**87, help_text="carton_pk=566")
        flag_carton_mwm_yso_cluster_apogee_0_5_0 = sdss5_target_flags.flag(2**88, help_text="carton_pk=567")
        flag_carton_mwm_yso_cluster_boss_0_5_0 = sdss5_target_flags.flag(2**89, help_text="carton_pk=568")
        flag_carton_mwm_rv_short_fps_0_5_0 = sdss5_target_flags.flag(2**90, help_text="carton_pk=576")
        flag_carton_mwm_legacy_ir2opt_0_5_0 = sdss5_target_flags.flag(2**91, help_text="carton_pk=580")
        flag_carton_mwm_dust_core_0_5_0 = sdss5_target_flags.flag(2**92, help_text="carton_pk=583")
        flag_carton_mwm_wd_core_0_5_0 = sdss5_target_flags.flag(2**93, help_text="carton_pk=585")
        flag_carton_mwm_tess_planet_0_5_0 = sdss5_target_flags.flag(2**94, help_text="carton_pk=586")
        flag_carton_mwm_snc_100pc_apogee_0_5_0 = sdss5_target_flags.flag(2**95, help_text="carton_pk=587")
        flag_carton_mwm_tess_ob_0_5_0 = sdss5_target_flags.flag(2**96, help_text="carton_pk=629")
        flag_carton_mwm_cb_uvex1_0_5_0 = sdss5_target_flags.flag(2**97, help_text="carton_pk=632")
        flag_carton_mwm_cb_uvex2_0_5_0 = sdss5_target_flags.flag(2**98, help_text="carton_pk=633")
        flag_carton_mwm_tessrgb_core_0_5_0 = sdss5_target_flags.flag(2**99, help_text="carton_pk=637")
        flag_carton_ops_std_boss_tic_0_5_0 = sdss5_target_flags.flag(2**100, help_text="carton_pk=675")
        flag_carton_mwm_rv_long_fps_0_5_0 = sdss5_target_flags.flag(2**101, help_text="carton_pk=681")
        flag_carton_mwm_halo_bb_boss_0_5_0 = sdss5_target_flags.flag(2**102, help_text="carton_pk=690")
        flag_carton_mwm_cb_300pc_apogee_0_5_0 = sdss5_target_flags.flag(2**103, help_text="carton_pk=691")
        flag_carton_mwm_cb_300pc_boss_0_5_0 = sdss5_target_flags.flag(2**104, help_text="carton_pk=692")
        flag_carton_bhm_spiders_agn_gaiadr2_0_5_0 = sdss5_target_flags.flag(2**105, help_text="carton_pk=693")
        flag_carton_bhm_spiders_agn_lsdr8_0_5_0 = sdss5_target_flags.flag(2**106, help_text="carton_pk=694")
        flag_carton_bhm_spiders_agn_sep_0_5_0 = sdss5_target_flags.flag(2**107, help_text="carton_pk=695")
        flag_carton_bhm_spiders_agn_efeds_stragglers_0_5_0 = sdss5_target_flags.flag(2**108, help_text="carton_pk=696")
        flag_carton_bhm_spiders_agn_ps1dr2_0_5_0 = sdss5_target_flags.flag(2**109, help_text="carton_pk=704")
        flag_carton_bhm_spiders_agn_skymapperdr2_0_5_0 = sdss5_target_flags.flag(2**110, help_text="carton_pk=705")
        flag_carton_bhm_spiders_agn_supercosmos_0_5_0 = sdss5_target_flags.flag(2**111, help_text="carton_pk=706")
        flag_carton_bhm_spiders_clusters_lsdr8_0_5_0 = sdss5_target_flags.flag(2**112, help_text="carton_pk=707")
        flag_carton_bhm_spiders_clusters_ps1dr2_0_5_0 = sdss5_target_flags.flag(2**113, help_text="carton_pk=708")
        flag_carton_bhm_spiders_clusters_efeds_stragglers_0_5_0 = sdss5_target_flags.flag(2**114, help_text="carton_pk=709")
        flag_carton_bhm_gua_bright_0_5_0 = sdss5_target_flags.flag(2**115, help_text="carton_pk=710")
        flag_carton_bhm_gua_dark_0_5_0 = sdss5_target_flags.flag(2**116, help_text="carton_pk=711")
        flag_carton_mwm_cb_uvex5_0_5_0 = sdss5_target_flags.flag(2**117, help_text="carton_pk=715")
        flag_carton_bhm_rm_known_spec_0_5_0 = sdss5_target_flags.flag(2**118, help_text="carton_pk=723")
        flag_carton_bhm_rm_core_0_5_0 = sdss5_target_flags.flag(2**119, help_text="carton_pk=724")
        flag_carton_bhm_rm_var_0_5_0 = sdss5_target_flags.flag(2**120, help_text="carton_pk=725")
        flag_carton_bhm_rm_ancillary_0_5_0 = sdss5_target_flags.flag(2**121, help_text="carton_pk=726")
        flag_carton_ops_std_boss_lsdr8_0_5_0 = sdss5_target_flags.flag(2**122, help_text="carton_pk=727")
        flag_carton_ops_std_boss_ps1dr2_0_5_0 = sdss5_target_flags.flag(2**123, help_text="carton_pk=728")
        flag_carton_ops_std_boss_gdr2_0_5_0 = sdss5_target_flags.flag(2**124, help_text="carton_pk=729")
        flag_carton_bhm_aqmes_med_0_5_0 = sdss5_target_flags.flag(2**125, help_text="carton_pk=731")
        flag_carton_bhm_aqmes_med_faint_0_5_0 = sdss5_target_flags.flag(2**126, help_text="carton_pk=732")
        flag_carton_bhm_csc_boss_dark_0_5_0 = sdss5_target_flags.flag(2**127, help_text="carton_pk=733")
        flag_carton_bhm_csc_boss_bright_0_5_0 = sdss5_target_flags.flag(2**128, help_text="carton_pk=734")
        flag_carton_bhm_csc_apogee_0_5_0 = sdss5_target_flags.flag(2**129, help_text="carton_pk=735")
        flag_carton_mwm_yso_pms_apogee_0_5_1 = sdss5_target_flags.flag(2**130, help_text="carton_pk=750")
        flag_carton_mwm_yso_pms_boss_0_5_1 = sdss5_target_flags.flag(2**131, help_text="carton_pk=751")
        flag_carton_mwm_ob_core_0_5_1 = sdss5_target_flags.flag(2**132, help_text="carton_pk=752")
        flag_carton_mwm_ob_cepheids_0_5_1 = sdss5_target_flags.flag(2**133, help_text="carton_pk=753")
        flag_carton_mwm_halo_bb_boss_0_5_1 = sdss5_target_flags.flag(2**134, help_text="carton_pk=754")
        flag_carton_mwm_halo_sm_boss_0_5_1 = sdss5_target_flags.flag(2**135, help_text="carton_pk=755")
        flag_carton_mwm_erosita_stars_0_5_2 = sdss5_target_flags.flag(2**136, help_text="carton_pk=770")
        flag_carton_mwm_erosita_compact_gen_0_5_2 = sdss5_target_flags.flag(2**137, help_text="carton_pk=771")
        flag_carton_mwm_erosita_compact_var_0_5_2 = sdss5_target_flags.flag(2**138, help_text="carton_pk=772")
        flag_carton_openfibertargets_nov2020_25_0_5_2_test = sdss5_target_flags.flag(2**139, help_text="carton_pk=892")
        flag_carton_openfibertargets_nov2020_28a_0_5_2_test = sdss5_target_flags.flag(2**140, help_text="carton_pk=895")
        flag_carton_openfibertargets_nov2020_28b_0_5_2_test = sdss5_target_flags.flag(2**141, help_text="carton_pk=896")
        flag_carton_openfibertargets_nov2020_28c_0_5_2_test = sdss5_target_flags.flag(2**142, help_text="carton_pk=897")
        flag_carton_openfibertargets_nov2020_35a_0_5_2_test = sdss5_target_flags.flag(2**143, help_text="carton_pk=903")
        flag_carton_openfibertargets_nov2020_35b_0_5_2_test = sdss5_target_flags.flag(2**144, help_text="carton_pk=904")
        flag_carton_openfibertargets_nov2020_5_0_5_2_test = sdss5_target_flags.flag(2**145, help_text="carton_pk=912")
        flag_carton_openfibertargets_nov2020_6b_0_5_2_test = sdss5_target_flags.flag(2**146, help_text="carton_pk=914")
        flag_carton_openfibertargets_nov2020_6c_0_5_2_test = sdss5_target_flags.flag(2**147, help_text="carton_pk=915")
        flag_carton_openfibertargets_nov2020_10_0_5_3 = sdss5_target_flags.flag(2**148, help_text="carton_pk=999")
        flag_carton_openfibertargets_nov2020_1000_0_5_3 = sdss5_target_flags.flag(2**149, help_text="carton_pk=1000")
        flag_carton_openfibertargets_nov2020_1001a_0_5_3 = sdss5_target_flags.flag(2**150, help_text="carton_pk=1001")
        flag_carton_openfibertargets_nov2020_1001b_0_5_3 = sdss5_target_flags.flag(2**151, help_text="carton_pk=1002")
        flag_carton_openfibertargets_nov2020_11_0_5_3 = sdss5_target_flags.flag(2**152, help_text="carton_pk=1003")
        flag_carton_openfibertargets_nov2020_12_0_5_3 = sdss5_target_flags.flag(2**153, help_text="carton_pk=1004")
        flag_carton_openfibertargets_nov2020_14_0_5_3 = sdss5_target_flags.flag(2**154, help_text="carton_pk=1005")
        flag_carton_openfibertargets_nov2020_15_0_5_3 = sdss5_target_flags.flag(2**155, help_text="carton_pk=1006")
        flag_carton_openfibertargets_nov2020_17_0_5_3 = sdss5_target_flags.flag(2**156, help_text="carton_pk=1007")
        flag_carton_openfibertargets_nov2020_18_0_5_3 = sdss5_target_flags.flag(2**157, help_text="carton_pk=1008")
        flag_carton_openfibertargets_nov2020_22_0_5_3 = sdss5_target_flags.flag(2**158, help_text="carton_pk=1009")
        flag_carton_openfibertargets_nov2020_24_0_5_3 = sdss5_target_flags.flag(2**159, help_text="carton_pk=1010")
        flag_carton_openfibertargets_nov2020_25_0_5_3 = sdss5_target_flags.flag(2**160, help_text="carton_pk=1011")
        flag_carton_openfibertargets_nov2020_26_0_5_3 = sdss5_target_flags.flag(2**161, help_text="carton_pk=1012")
        flag_carton_openfibertargets_nov2020_27_0_5_3 = sdss5_target_flags.flag(2**162, help_text="carton_pk=1013")
        flag_carton_openfibertargets_nov2020_28a_0_5_3 = sdss5_target_flags.flag(2**163, help_text="carton_pk=1014")
        flag_carton_openfibertargets_nov2020_28b_0_5_3 = sdss5_target_flags.flag(2**164, help_text="carton_pk=1015")
        flag_carton_openfibertargets_nov2020_28c_0_5_3 = sdss5_target_flags.flag(2**165, help_text="carton_pk=1016")
        flag_carton_openfibertargets_nov2020_29_0_5_3 = sdss5_target_flags.flag(2**166, help_text="carton_pk=1017")
        flag_carton_openfibertargets_nov2020_3_0_5_3 = sdss5_target_flags.flag(2**167, help_text="carton_pk=1018")
        flag_carton_openfibertargets_nov2020_30_0_5_3 = sdss5_target_flags.flag(2**168, help_text="carton_pk=1019")
        flag_carton_openfibertargets_nov2020_31_0_5_3 = sdss5_target_flags.flag(2**169, help_text="carton_pk=1020")
        flag_carton_openfibertargets_nov2020_32_0_5_3 = sdss5_target_flags.flag(2**170, help_text="carton_pk=1021")
        flag_carton_openfibertargets_nov2020_33_0_5_3 = sdss5_target_flags.flag(2**171, help_text="carton_pk=1022")
        flag_carton_openfibertargets_nov2020_35a_0_5_3 = sdss5_target_flags.flag(2**172, help_text="carton_pk=1023")
        flag_carton_openfibertargets_nov2020_35b_0_5_3 = sdss5_target_flags.flag(2**173, help_text="carton_pk=1024")
        flag_carton_openfibertargets_nov2020_35c_0_5_3 = sdss5_target_flags.flag(2**174, help_text="carton_pk=1025")
        flag_carton_openfibertargets_nov2020_46_0_5_3 = sdss5_target_flags.flag(2**175, help_text="carton_pk=1026")
        flag_carton_openfibertargets_nov2020_47a_0_5_3 = sdss5_target_flags.flag(2**176, help_text="carton_pk=1027")
        flag_carton_openfibertargets_nov2020_47b_0_5_3 = sdss5_target_flags.flag(2**177, help_text="carton_pk=1028")
        flag_carton_openfibertargets_nov2020_47c_0_5_3 = sdss5_target_flags.flag(2**178, help_text="carton_pk=1029")
        flag_carton_openfibertargets_nov2020_47d_0_5_3 = sdss5_target_flags.flag(2**179, help_text="carton_pk=1030")
        flag_carton_openfibertargets_nov2020_47e_0_5_3 = sdss5_target_flags.flag(2**180, help_text="carton_pk=1031")
        flag_carton_openfibertargets_nov2020_8_0_5_3 = sdss5_target_flags.flag(2**181, help_text="carton_pk=1036")
        flag_carton_openfibertargets_nov2020_9_0_5_3 = sdss5_target_flags.flag(2**182, help_text="carton_pk=1037")
        flag_carton_openfibertargets_nov2020_19a_0_5_3 = sdss5_target_flags.flag(2**183, help_text="carton_pk=1040")
        flag_carton_openfibertargets_nov2020_19b_0_5_3 = sdss5_target_flags.flag(2**184, help_text="carton_pk=1041")
        flag_carton_openfibertargets_nov2020_19c_0_5_3 = sdss5_target_flags.flag(2**185, help_text="carton_pk=1042")
        flag_carton_manual_nsbh_apogee_0_5_3 = sdss5_target_flags.flag(2**186, help_text="carton_pk=1043")
        flag_carton_manual_nsbh_boss_0_5_3 = sdss5_target_flags.flag(2**187, help_text="carton_pk=1044")
        flag_carton_manual_bhm_spiders_comm_0_5_3 = sdss5_target_flags.flag(2**188, help_text="carton_pk=1048")
        flag_carton_bhm_aqmes_bonus_bright_0_5_4 = sdss5_target_flags.flag(2**189, help_text="carton_pk=1049")
        flag_carton_bhm_aqmes_bonus_core_0_5_4 = sdss5_target_flags.flag(2**190, help_text="carton_pk=1050")
        flag_carton_bhm_aqmes_bonus_faint_0_5_4 = sdss5_target_flags.flag(2**191, help_text="carton_pk=1051")
        flag_carton_bhm_aqmes_wide2_0_5_4 = sdss5_target_flags.flag(2**192, help_text="carton_pk=1052")
        flag_carton_bhm_aqmes_wide2_faint_0_5_4 = sdss5_target_flags.flag(2**193, help_text="carton_pk=1053")
        flag_carton_mwm_cb_300pc_boss_0_5_4 = sdss5_target_flags.flag(2**194, help_text="carton_pk=1055")
        flag_carton_openfibertargets_nov2020_5_0_5_3 = sdss5_target_flags.flag(2**195, help_text="carton_pk=1056")
        flag_carton_openfibertargets_nov2020_6a_0_5_3 = sdss5_target_flags.flag(2**196, help_text="carton_pk=1057")
        flag_carton_openfibertargets_nov2020_6b_0_5_3 = sdss5_target_flags.flag(2**197, help_text="carton_pk=1058")
        flag_carton_openfibertargets_nov2020_6c_0_5_3 = sdss5_target_flags.flag(2**198, help_text="carton_pk=1059")
        flag_carton_manual_bright_target_offsets_1_0_5_3 = sdss5_target_flags.flag(2**199, help_text="carton_pk=1069")
        flag_carton_manual_bright_target_offsets_1_g13_0_5_3 = sdss5_target_flags.flag(2**200, help_text="carton_pk=1070")
        flag_carton_manual_bright_targets_g13_0_5_3 = sdss5_target_flags.flag(2**201, help_text="carton_pk=1073")
        flag_carton_manual_bright_targets_g13_offset_fixed_1_0_5_3 = sdss5_target_flags.flag(2**202, help_text="carton_pk=1074")
        flag_carton_manual_bright_targets_g13_offset_fixed_3_0_5_3 = sdss5_target_flags.flag(2**203, help_text="carton_pk=1076")
        flag_carton_manual_bright_targets_g13_offset_fixed_5_0_5_3 = sdss5_target_flags.flag(2**204, help_text="carton_pk=1078")
        flag_carton_manual_bright_targets_g13_offset_fixed_7_0_5_3 = sdss5_target_flags.flag(2**205, help_text="carton_pk=1080")
        flag_carton_ops_sky_boss_best_0_5_7 = sdss5_target_flags.flag(2**206, help_text="carton_pk=1082")
        flag_carton_ops_sky_boss_good_0_5_7 = sdss5_target_flags.flag(2**207, help_text="carton_pk=1083")
        flag_carton_ops_sky_boss_best_0_5_8 = sdss5_target_flags.flag(2**208, help_text="carton_pk=1090")
        flag_carton_ops_sky_boss_good_0_5_8 = sdss5_target_flags.flag(2**209, help_text="carton_pk=1091")
        flag_carton_ops_sky_apogee_best_0_5_8 = sdss5_target_flags.flag(2**210, help_text="carton_pk=1092")
        flag_carton_ops_sky_apogee_good_0_5_8 = sdss5_target_flags.flag(2**211, help_text="carton_pk=1093")
        flag_carton_manual_fps_position_stars_0_5_3 = sdss5_target_flags.flag(2**212, help_text="carton_pk=1094")
        flag_carton_ops_sky_boss_best_0_5_9 = sdss5_target_flags.flag(2**213, help_text="carton_pk=1095")
        flag_carton_ops_sky_boss_good_0_5_9 = sdss5_target_flags.flag(2**214, help_text="carton_pk=1096")
        flag_carton_ops_sky_apogee_best_0_5_9 = sdss5_target_flags.flag(2**215, help_text="carton_pk=1097")
        flag_carton_ops_sky_apogee_good_0_5_9 = sdss5_target_flags.flag(2**216, help_text="carton_pk=1098")
        flag_carton_mwm_tess_ob_0_5_11 = sdss5_target_flags.flag(2**217, help_text="carton_pk=1104")
        flag_carton_manual_fps_position_stars_10_0_5_3 = sdss5_target_flags.flag(2**218, help_text="carton_pk=1105")
        flag_carton_ops_sky_boss_fallback_0_5_12 = sdss5_target_flags.flag(2**219, help_text="carton_pk=1108")
        flag_carton_openfibertargets_nov2020_34a_0_5_13 = sdss5_target_flags.flag(2**220, help_text="carton_pk=1110")
        flag_carton_openfibertargets_nov2020_34b_0_5_13 = sdss5_target_flags.flag(2**221, help_text="carton_pk=1111")
        flag_carton_bhm_csc_boss_0_5_14 = sdss5_target_flags.flag(2**222, help_text="carton_pk=1112")
        flag_carton_bhm_csc_boss_0_5_15 = sdss5_target_flags.flag(2**223, help_text="carton_pk=1114")
        flag_carton_bhm_csc_apogee_0_5_15 = sdss5_target_flags.flag(2**224, help_text="carton_pk=1115")
        flag_carton_bhm_colr_galaxies_lsdr8_0_5_16 = sdss5_target_flags.flag(2**225, help_text="carton_pk=1116")
        flag_carton_mwm_yso_cluster_apogee_0_5_17 = sdss5_target_flags.flag(2**226, help_text="carton_pk=1121")
        flag_carton_mwm_yso_cluster_boss_0_5_17 = sdss5_target_flags.flag(2**227, help_text="carton_pk=1122")
        flag_carton_mwm_yso_cmz_apogee_0_5_17 = sdss5_target_flags.flag(2**228, help_text="carton_pk=1123")
        flag_carton_mwm_yso_disk_apogee_0_5_17 = sdss5_target_flags.flag(2**229, help_text="carton_pk=1124")
        flag_carton_mwm_yso_disk_boss_0_5_17 = sdss5_target_flags.flag(2**230, help_text="carton_pk=1125")
        flag_carton_mwm_yso_embedded_apogee_0_5_17 = sdss5_target_flags.flag(2**231, help_text="carton_pk=1126")
        flag_carton_mwm_yso_nebula_apogee_0_5_17 = sdss5_target_flags.flag(2**232, help_text="carton_pk=1127")
        flag_carton_mwm_yso_variable_apogee_0_5_17 = sdss5_target_flags.flag(2**233, help_text="carton_pk=1128")
        flag_carton_mwm_yso_variable_boss_0_5_17 = sdss5_target_flags.flag(2**234, help_text="carton_pk=1129")
        flag_carton_mwm_rv_long_fps_0_5_18 = sdss5_target_flags.flag(2**235, help_text="carton_pk=1130")
        flag_carton_mwm_rv_short_fps_0_5_18 = sdss5_target_flags.flag(2**236, help_text="carton_pk=1131")
        flag_carton_mwm_cb_300pc_apogee_0_5_19 = sdss5_target_flags.flag(2**237, help_text="carton_pk=1132")
        flag_carton_mwm_cb_300pc_boss_0_5_19 = sdss5_target_flags.flag(2**238, help_text="carton_pk=1133")
        flag_carton_manual_mwm_tess_ob_0_5_13 = sdss5_target_flags.flag(2**239, help_text="carton_pk=1134")
        flag_carton_manual_fps_position_stars_apogee_10_0_5_13 = sdss5_target_flags.flag(2**240, help_text="carton_pk=1135")
        flag_carton_manual_offset_mwmhalo_off00_0_5_13 = sdss5_target_flags.flag(2**241, help_text="carton_pk=1137")
        flag_carton_manual_offset_mwmhalo_off05_0_5_13 = sdss5_target_flags.flag(2**242, help_text="carton_pk=1138")
        flag_carton_manual_offset_mwmhalo_off10_0_5_13 = sdss5_target_flags.flag(2**243, help_text="carton_pk=1139")
        flag_carton_manual_offset_mwmhalo_off20_0_5_13 = sdss5_target_flags.flag(2**244, help_text="carton_pk=1140")
        flag_carton_manual_offset_mwmhalo_off30_0_5_13 = sdss5_target_flags.flag(2**245, help_text="carton_pk=1141")
        flag_carton_manual_offset_mwmhalo_offa_0_5_13 = sdss5_target_flags.flag(2**246, help_text="carton_pk=1142")
        flag_carton_manual_offset_mwmhalo_offb_0_5_13 = sdss5_target_flags.flag(2**247, help_text="carton_pk=1143")
        flag_carton_manual_bright_target_offsets_3_0_5_20 = sdss5_target_flags.flag(2**248, help_text="carton_pk=1158")
        flag_carton_ops_std_apogee_0_5_22 = sdss5_target_flags.flag(2**249, help_text="carton_pk=1163")
        flag_carton_manual_bhm_spiders_comm_lco_0_5_23 = sdss5_target_flags.flag(2**250, help_text="carton_pk=1165")
        flag_carton_manual_fps_position_stars_lco_apogee_10_0_5_23 = sdss5_target_flags.flag(2**251, help_text="carton_pk=1166")
        flag_carton_bhm_spiders_agn_sep_1_0_5 = sdss5_target_flags.flag(2**252, help_text="carton_pk=1253")
        flag_carton_ops_std_boss_lsdr10_1_0_5 = sdss5_target_flags.flag(2**253, help_text="carton_pk=1263")
        flag_carton_mwm_yso_cluster_apogee_1_0_6 = sdss5_target_flags.flag(2**254, help_text="carton_pk=1267")
        flag_carton_mwm_yso_cluster_boss_1_0_6 = sdss5_target_flags.flag(2**255, help_text="carton_pk=1268")
        flag_carton_mwm_yso_disk_apogee_1_0_6 = sdss5_target_flags.flag(2**256, help_text="carton_pk=1271")
        flag_carton_mwm_yso_disk_boss_1_0_6 = sdss5_target_flags.flag(2**257, help_text="carton_pk=1272")
        flag_carton_mwm_yso_cmz_apogee_1_0_6 = sdss5_target_flags.flag(2**258, help_text="carton_pk=1273")
        flag_carton_mwm_yso_variable_apogee_1_0_6 = sdss5_target_flags.flag(2**259, help_text="carton_pk=1274")
        flag_carton_mwm_yso_variable_boss_1_0_6 = sdss5_target_flags.flag(2**260, help_text="carton_pk=1275")
        flag_carton_mwm_yso_embedded_apogee_1_0_6 = sdss5_target_flags.flag(2**261, help_text="carton_pk=1276")
        flag_carton_mwm_yso_pms_apogee_zari18pms_1_0_6 = sdss5_target_flags.flag(2**262, help_text="carton_pk=1278")
        flag_carton_mwm_yso_pms_boss_sagitta_edr3_1_0_6 = sdss5_target_flags.flag(2**263, help_text="carton_pk=1279")
        flag_carton_mwm_yso_pms_boss_zari18pms_1_0_6 = sdss5_target_flags.flag(2**264, help_text="carton_pk=1280")
        flag_carton_openfibertargets_nov2020_11_1_0_7 = sdss5_target_flags.flag(2**265, help_text="carton_pk=1289")
        flag_carton_openfibertargets_nov2020_18_1_0_7 = sdss5_target_flags.flag(2**266, help_text="carton_pk=1290")
        flag_carton_openfibertargets_nov2020_26_1_0_7 = sdss5_target_flags.flag(2**267, help_text="carton_pk=1291")
        flag_carton_openfibertargets_nov2020_27_1_0_7 = sdss5_target_flags.flag(2**268, help_text="carton_pk=1292")
        flag_carton_openfibertargets_nov2020_30_1_0_7 = sdss5_target_flags.flag(2**269, help_text="carton_pk=1293")
        flag_carton_mwm_yso_nebula_apogee_1_0_8 = sdss5_target_flags.flag(2**270, help_text="carton_pk=1308")
        flag_carton_manual_mwm_halo_distant_kgiant_1_0_7 = sdss5_target_flags.flag(2**271, help_text="carton_pk=1317")
        flag_carton_manual_mwm_halo_mp_bbb_1_0_7 = sdss5_target_flags.flag(2**272, help_text="carton_pk=1318")
        flag_carton_openfibertargets_nov2020_10_1_0_7 = sdss5_target_flags.flag(2**273, help_text="carton_pk=1320")
        flag_carton_openfibertargets_nov2020_1000_1_0_7 = sdss5_target_flags.flag(2**274, help_text="carton_pk=1321")
        flag_carton_openfibertargets_nov2020_12_1_0_7 = sdss5_target_flags.flag(2**275, help_text="carton_pk=1322")
        flag_carton_openfibertargets_nov2020_14_1_0_7 = sdss5_target_flags.flag(2**276, help_text="carton_pk=1323")
        flag_carton_openfibertargets_nov2020_15_1_0_7 = sdss5_target_flags.flag(2**277, help_text="carton_pk=1324")
        flag_carton_openfibertargets_nov2020_22_1_0_7 = sdss5_target_flags.flag(2**278, help_text="carton_pk=1325")
        flag_carton_openfibertargets_nov2020_24_1_0_7 = sdss5_target_flags.flag(2**279, help_text="carton_pk=1326")
        flag_carton_openfibertargets_nov2020_29_1_0_7 = sdss5_target_flags.flag(2**280, help_text="carton_pk=1327")
        flag_carton_openfibertargets_nov2020_3_1_0_7 = sdss5_target_flags.flag(2**281, help_text="carton_pk=1328")
        flag_carton_openfibertargets_nov2020_31_1_0_7 = sdss5_target_flags.flag(2**282, help_text="carton_pk=1329")
        flag_carton_openfibertargets_nov2020_34a_1_0_7 = sdss5_target_flags.flag(2**283, help_text="carton_pk=1330")
        flag_carton_openfibertargets_nov2020_34b_1_0_7 = sdss5_target_flags.flag(2**284, help_text="carton_pk=1331")
        flag_carton_openfibertargets_nov2020_35b_1_0_7 = sdss5_target_flags.flag(2**285, help_text="carton_pk=1332")
        flag_carton_openfibertargets_nov2020_35c_1_0_7 = sdss5_target_flags.flag(2**286, help_text="carton_pk=1333")
        flag_carton_openfibertargets_nov2020_46_1_0_7 = sdss5_target_flags.flag(2**287, help_text="carton_pk=1334")
        flag_carton_openfibertargets_nov2020_5_1_0_7 = sdss5_target_flags.flag(2**288, help_text="carton_pk=1335")
        flag_carton_openfibertargets_nov2020_6a_1_0_7 = sdss5_target_flags.flag(2**289, help_text="carton_pk=1336")
        flag_carton_openfibertargets_nov2020_6b_1_0_7 = sdss5_target_flags.flag(2**290, help_text="carton_pk=1337")
        flag_carton_openfibertargets_nov2020_6c_1_0_7 = sdss5_target_flags.flag(2**291, help_text="carton_pk=1338")
        flag_carton_openfibertargets_nov2020_8_1_0_7 = sdss5_target_flags.flag(2**292, help_text="carton_pk=1339")
        flag_carton_openfibertargets_nov2020_9_1_0_7 = sdss5_target_flags.flag(2**293, help_text="carton_pk=1340")
        flag_carton_openfibertargets_nov2020_28a_1_0_7 = sdss5_target_flags.flag(2**294, help_text="carton_pk=1344")
        flag_carton_openfibertargets_nov2020_33_1_0_10 = sdss5_target_flags.flag(2**295, help_text="carton_pk=1358")
        flag_carton_bhm_rm_core_1_0_12 = sdss5_target_flags.flag(2**296, help_text="carton_pk=1359")
        flag_carton_bhm_rm_known_spec_1_0_12 = sdss5_target_flags.flag(2**297, help_text="carton_pk=1360")
        flag_carton_bhm_rm_var_1_0_12 = sdss5_target_flags.flag(2**298, help_text="carton_pk=1361")
        flag_carton_bhm_rm_ancillary_1_0_12 = sdss5_target_flags.flag(2**299, help_text="carton_pk=1362")
        flag_carton_bhm_rm_xrayqso_1_0_12 = sdss5_target_flags.flag(2**300, help_text="carton_pk=1363")
        flag_carton_manual_mwm_magcloud_massive_apogee_1_0_10 = sdss5_target_flags.flag(2**301, help_text="carton_pk=1367")
        flag_carton_manual_mwm_magcloud_massive_boss_1_0_10 = sdss5_target_flags.flag(2**302, help_text="carton_pk=1368")
        flag_carton_manual_mwm_magcloud_symbiotic_apogee_1_0_10 = sdss5_target_flags.flag(2**303, help_text="carton_pk=1369")
        flag_carton_ops_std_boss_gdr2_1_0_13 = sdss5_target_flags.flag(2**304, help_text="carton_pk=1370")
        flag_carton_ops_std_apogee_1_0_14 = sdss5_target_flags.flag(2**305, help_text="carton_pk=1371")
        flag_carton_ops_std_eboss_1_0_15 = sdss5_target_flags.flag(2**306, help_text="carton_pk=1372")
        flag_carton_ops_std_boss_1_0_16 = sdss5_target_flags.flag(2**307, help_text="carton_pk=1374")
        flag_carton_ops_std_boss_red_1_0_16 = sdss5_target_flags.flag(2**308, help_text="carton_pk=1375")
        flag_carton_ops_std_boss_tic_1_0_16 = sdss5_target_flags.flag(2**309, help_text="carton_pk=1376")
        flag_carton_mwm_snc_100pc_apogee_1_0_17 = sdss5_target_flags.flag(2**310, help_text="carton_pk=1378")
        flag_carton_mwm_snc_100pc_boss_1_0_17 = sdss5_target_flags.flag(2**311, help_text="carton_pk=1379")
        flag_carton_mwm_bin_gaia_astb_apogee_1_0_19 = sdss5_target_flags.flag(2**312, help_text="carton_pk=1400")
        flag_carton_mwm_bin_gaia_astb_boss_1_0_19 = sdss5_target_flags.flag(2**313, help_text="carton_pk=1401")
        flag_carton_mwm_bin_gaia_sb_apogee_1_0_19 = sdss5_target_flags.flag(2**314, help_text="carton_pk=1402")
        flag_carton_mwm_bin_gaia_sb_boss_1_0_19 = sdss5_target_flags.flag(2**315, help_text="carton_pk=1403")
        flag_carton_mwm_yso_pms_apogee_sagitta_edr3_1_0_20 = sdss5_target_flags.flag(2**316, help_text="carton_pk=1412")
        flag_carton_mwm_snc_100pc_boss_1_0_24 = sdss5_target_flags.flag(2**317, help_text="carton_pk=1427")
        flag_carton_mwm_snc_100pc_boss_1_0_28 = sdss5_target_flags.flag(2**318, help_text="carton_pk=1448")
        flag_carton_mwm_yso_disk_apogee_single_1_0_33 = sdss5_target_flags.flag(2**319, help_text="carton_pk=1462")
        flag_carton_mwm_yso_disk_boss_single_1_0_33 = sdss5_target_flags.flag(2**320, help_text="carton_pk=1463")
        flag_carton_mwm_yso_embedded_apogee_single_1_0_33 = sdss5_target_flags.flag(2**321, help_text="carton_pk=1464")
        flag_carton_mwm_yso_nebula_apogee_single_1_0_33 = sdss5_target_flags.flag(2**322, help_text="carton_pk=1465")
        flag_carton_mwm_yso_variable_apogee_single_1_0_33 = sdss5_target_flags.flag(2**323, help_text="carton_pk=1466")
        flag_carton_mwm_yso_variable_boss_single_1_0_33 = sdss5_target_flags.flag(2**324, help_text="carton_pk=1467")
        flag_carton_mwm_yso_cmz_apogee_single_1_0_33 = sdss5_target_flags.flag(2**325, help_text="carton_pk=1468")
        flag_carton_mwm_yso_cluster_apogee_single_1_0_33 = sdss5_target_flags.flag(2**326, help_text="carton_pk=1469")
        flag_carton_mwm_yso_cluster_boss_single_1_0_33 = sdss5_target_flags.flag(2**327, help_text="carton_pk=1470")
        flag_carton_mwm_yso_pms_apogee_sagitta_edr3_single_1_0_33 = sdss5_target_flags.flag(2**328, help_text="carton_pk=1471")
        flag_carton_mwm_yso_pms_apogee_zari18pms_single_1_0_33 = sdss5_target_flags.flag(2**329, help_text="carton_pk=1472")
        flag_carton_mwm_yso_pms_boss_sagitta_edr3_single_1_0_33 = sdss5_target_flags.flag(2**330, help_text="carton_pk=1473")
        flag_carton_mwm_yso_pms_boss_zari18pms_single_1_0_33 = sdss5_target_flags.flag(2**331, help_text="carton_pk=1474")
        flag_carton_ops_std_boss_ps1dr2_1_0_29 = sdss5_target_flags.flag(2**332, help_text="carton_pk=1475")
        flag_carton_bhm_csc_boss_1_0_37 = sdss5_target_flags.flag(2**333, help_text="carton_pk=1498")
        flag_carton_bhm_csc_apogee_1_0_37 = sdss5_target_flags.flag(2**334, help_text="carton_pk=1499")
        flag_carton_bhm_gua_dark_1_0_37 = sdss5_target_flags.flag(2**335, help_text="carton_pk=1500")
        flag_carton_bhm_gua_bright_1_0_37 = sdss5_target_flags.flag(2**336, help_text="carton_pk=1501")
        flag_carton_bhm_spiders_clusters_lsdr10_1_0_37 = sdss5_target_flags.flag(2**337, help_text="carton_pk=1502")
        flag_carton_bhm_spiders_agn_lsdr10_1_0_37 = sdss5_target_flags.flag(2**338, help_text="carton_pk=1503")
        flag_carton_bhm_spiders_agn_hard_1_0_37 = sdss5_target_flags.flag(2**339, help_text="carton_pk=1504")
        flag_carton_bhm_spiders_agn_gaiadr3_1_0_37 = sdss5_target_flags.flag(2**340, help_text="carton_pk=1505")
        flag_carton_bhm_spiders_agn_tda_1_0_37 = sdss5_target_flags.flag(2**341, help_text="carton_pk=1506")
        flag_carton_bhm_spiders_agn_sep_1_0_37 = sdss5_target_flags.flag(2**342, help_text="carton_pk=1507")
        flag_carton_bhm_aqmes_med_1_0_37 = sdss5_target_flags.flag(2**343, help_text="carton_pk=1508")
        flag_carton_bhm_aqmes_med_faint_1_0_37 = sdss5_target_flags.flag(2**344, help_text="carton_pk=1509")
        flag_carton_bhm_aqmes_wide2_1_0_37 = sdss5_target_flags.flag(2**345, help_text="carton_pk=1510")
        flag_carton_bhm_aqmes_wide2_faint_1_0_37 = sdss5_target_flags.flag(2**346, help_text="carton_pk=1511")
        flag_carton_bhm_aqmes_bonus_core_1_0_37 = sdss5_target_flags.flag(2**347, help_text="carton_pk=1515")
        flag_carton_bhm_aqmes_bonus_bright_1_0_37 = sdss5_target_flags.flag(2**348, help_text="carton_pk=1516")
        flag_carton_bhm_aqmes_bonus_faint_1_0_37 = sdss5_target_flags.flag(2**349, help_text="carton_pk=1517")
        flag_carton_manual_mwm_crosscalib_apogee_1_0_35 = sdss5_target_flags.flag(2**350, help_text="carton_pk=1525")
        flag_carton_manual_mwm_crosscalib_yso_apogee_1_0_35 = sdss5_target_flags.flag(2**351, help_text="carton_pk=1526")
        flag_carton_manual_mwm_crosscalib_yso_boss_1_0_35 = sdss5_target_flags.flag(2**352, help_text="carton_pk=1527")
        flag_carton_manual_mwm_halo_distant_bhb_boss_1_0_35 = sdss5_target_flags.flag(2**353, help_text="carton_pk=1528")
        flag_carton_manual_mwm_halo_distant_bhb_boss_single_1_0_35 = sdss5_target_flags.flag(2**354, help_text="carton_pk=1529")
        flag_carton_manual_mwm_halo_distant_kgiant_far_boss_1_0_35 = sdss5_target_flags.flag(2**355, help_text="carton_pk=1530")
        flag_carton_manual_mwm_halo_distant_kgiant_far_boss_single_1_0_35 = sdss5_target_flags.flag(2**356, help_text="carton_pk=1531")
        flag_carton_manual_mwm_halo_distant_kgiant_near_boss_1_0_35 = sdss5_target_flags.flag(2**357, help_text="carton_pk=1532")
        flag_carton_manual_mwm_halo_distant_kgiant_near_boss_single_1_0_35 = sdss5_target_flags.flag(2**358, help_text="carton_pk=1533")
        flag_carton_manual_mwm_halo_mp_wise_apogee_1_0_35 = sdss5_target_flags.flag(2**359, help_text="carton_pk=1534")
        flag_carton_manual_mwm_halo_mp_wise_apogee_single_1_0_35 = sdss5_target_flags.flag(2**360, help_text="carton_pk=1535")
        flag_carton_manual_mwm_halo_mp_wise_boss_1_0_35 = sdss5_target_flags.flag(2**361, help_text="carton_pk=1536")
        flag_carton_manual_mwm_halo_mp_wise_boss_single_1_0_35 = sdss5_target_flags.flag(2**362, help_text="carton_pk=1537")
        flag_carton_manual_mwm_halo_vmp_wise_apogee_1_0_35 = sdss5_target_flags.flag(2**363, help_text="carton_pk=1538")
        flag_carton_manual_mwm_halo_vmp_wise_apogee_single_1_0_35 = sdss5_target_flags.flag(2**364, help_text="carton_pk=1539")
        flag_carton_manual_mwm_halo_vmp_wise_boss_1_0_35 = sdss5_target_flags.flag(2**365, help_text="carton_pk=1540")
        flag_carton_manual_mwm_halo_vmp_wise_boss_single_1_0_35 = sdss5_target_flags.flag(2**366, help_text="carton_pk=1541")
        flag_carton_manual_mwm_tess_ob_apogee_1_0_35 = sdss5_target_flags.flag(2**367, help_text="carton_pk=1554")
        flag_carton_bhm_colr_galaxies_lsdr10_1_0_38 = sdss5_target_flags.flag(2**368, help_text="carton_pk=1555")
        flag_carton_manual_mwm_validation_cool_apogee_1_0_35 = sdss5_target_flags.flag(2**369, help_text="carton_pk=1556")
        flag_carton_manual_mwm_validation_cool_boss_1_0_35 = sdss5_target_flags.flag(2**370, help_text="carton_pk=1557")
        flag_carton_manual_mwm_validation_hot_apogee_1_0_35 = sdss5_target_flags.flag(2**371, help_text="carton_pk=1558")
        flag_carton_manual_mwm_validation_hot_boss_1_0_35 = sdss5_target_flags.flag(2**372, help_text="carton_pk=1559")
        flag_carton_mwm_ob_core_boss_1_0_39 = sdss5_target_flags.flag(2**373, help_text="carton_pk=1561")
        flag_carton_mwm_ob_core_boss_single_1_0_39 = sdss5_target_flags.flag(2**374, help_text="carton_pk=1562")
        flag_carton_mwm_ob_cepheids_boss_1_0_39 = sdss5_target_flags.flag(2**375, help_text="carton_pk=1565")
        flag_carton_mwm_bin_rv_long_apogee_1_0_39 = sdss5_target_flags.flag(2**376, help_text="carton_pk=1566")
        flag_carton_mwm_bin_rv_short_mdwarf_apogee_18epoch_1_0_39 = sdss5_target_flags.flag(2**377, help_text="carton_pk=1567")
        flag_carton_mwm_bin_rv_short_mdwarf_apogee_12epoch_1_0_39 = sdss5_target_flags.flag(2**378, help_text="carton_pk=1568")
        flag_carton_mwm_bin_rv_short_mdwarf_apogee_08epoch_1_0_39 = sdss5_target_flags.flag(2**379, help_text="carton_pk=1569")
        flag_carton_mwm_bin_rv_short_subgiant_apogee_1_0_39 = sdss5_target_flags.flag(2**380, help_text="carton_pk=1570")
        flag_carton_mwm_bin_rv_short_rgb_apogee_1_0_39 = sdss5_target_flags.flag(2**381, help_text="carton_pk=1571")
        flag_carton_mwm_halo_distant_rrl_boss_single_1_0_39 = sdss5_target_flags.flag(2**382, help_text="carton_pk=1572")
        flag_carton_mwm_halo_distant_rrl_boss_1_0_39 = sdss5_target_flags.flag(2**383, help_text="carton_pk=1573")
        flag_carton_mwm_halo_vmp_xp_boss_single_1_0_39 = sdss5_target_flags.flag(2**384, help_text="carton_pk=1574")
        flag_carton_mwm_halo_nmp_xp_boss_single_1_0_39 = sdss5_target_flags.flag(2**385, help_text="carton_pk=1576")
        flag_carton_mwm_halo_vmp_xp_apogee_single_1_0_39 = sdss5_target_flags.flag(2**386, help_text="carton_pk=1577")
        flag_carton_mwm_halo_mp_xp_apogee_single_1_0_39 = sdss5_target_flags.flag(2**387, help_text="carton_pk=1578")
        flag_carton_mwm_halo_nmp_xp_apogee_single_1_0_39 = sdss5_target_flags.flag(2**388, help_text="carton_pk=1579")
        flag_carton_mwm_halo_vmp_xp_boss_1_0_39 = sdss5_target_flags.flag(2**389, help_text="carton_pk=1580")
        flag_carton_mwm_halo_mp_xp_boss_1_0_39 = sdss5_target_flags.flag(2**390, help_text="carton_pk=1581")
        flag_carton_mwm_halo_nmp_xp_boss_1_0_39 = sdss5_target_flags.flag(2**391, help_text="carton_pk=1582")
        flag_carton_mwm_halo_vmp_xp_apogee_1_0_39 = sdss5_target_flags.flag(2**392, help_text="carton_pk=1583")
        flag_carton_mwm_halo_mp_xp_apogee_1_0_39 = sdss5_target_flags.flag(2**393, help_text="carton_pk=1584")
        flag_carton_mwm_halo_nmp_xp_apogee_1_0_39 = sdss5_target_flags.flag(2**394, help_text="carton_pk=1585")
        flag_carton_mwm_halo_local_high_apogee_single_1_0_39 = sdss5_target_flags.flag(2**395, help_text="carton_pk=1586")
        flag_carton_mwm_halo_local_high_boss_single_1_0_39 = sdss5_target_flags.flag(2**396, help_text="carton_pk=1587")
        flag_carton_mwm_halo_local_low_apogee_single_1_0_39 = sdss5_target_flags.flag(2**397, help_text="carton_pk=1588")
        flag_carton_mwm_halo_local_low_boss_single_1_0_39 = sdss5_target_flags.flag(2**398, help_text="carton_pk=1589")
        flag_carton_mwm_halo_local_high_apogee_1_0_39 = sdss5_target_flags.flag(2**399, help_text="carton_pk=1590")
        flag_carton_mwm_halo_local_high_boss_1_0_39 = sdss5_target_flags.flag(2**400, help_text="carton_pk=1591")
        flag_carton_mwm_halo_local_low_apogee_1_0_39 = sdss5_target_flags.flag(2**401, help_text="carton_pk=1592")
        flag_carton_mwm_halo_local_low_boss_1_0_39 = sdss5_target_flags.flag(2**402, help_text="carton_pk=1593")
        flag_carton_mwm_erosita_stars_boss_1_0_40 = sdss5_target_flags.flag(2**403, help_text="carton_pk=1594")
        flag_carton_mwm_erosita_compact_boss_1_0_40 = sdss5_target_flags.flag(2**404, help_text="carton_pk=1595")
        flag_carton_mwm_erosita_compact_boss_shallow_1_0_40 = sdss5_target_flags.flag(2**405, help_text="carton_pk=1596")
        flag_carton_mwm_halo_mp_xp_boss_single_1_0_41 = sdss5_target_flags.flag(2**406, help_text="carton_pk=1597")
        flag_carton_mwm_snc_ext_main_apogee_1_0_41 = sdss5_target_flags.flag(2**407, help_text="carton_pk=1598")
        flag_carton_mwm_snc_ext_filler_apogee_1_0_41 = sdss5_target_flags.flag(2**408, help_text="carton_pk=1599")
        flag_carton_mwm_snc_ext_main_boss_1_0_41 = sdss5_target_flags.flag(2**409, help_text="carton_pk=1600")
        flag_carton_mwm_snc_ext_filler_boss_1_0_41 = sdss5_target_flags.flag(2**410, help_text="carton_pk=1601")
        flag_carton_mwm_monitor_n188_apogee_long_1_0_42 = sdss5_target_flags.flag(2**411, help_text="carton_pk=1611")
        flag_carton_mwm_monitor_n188_apogee_short_1_0_42 = sdss5_target_flags.flag(2**412, help_text="carton_pk=1612")
        flag_carton_mwm_monitor_m67_apogee_long_1_0_42 = sdss5_target_flags.flag(2**413, help_text="carton_pk=1613")
        flag_carton_mwm_monitor_m67_apogee_short_1_0_42 = sdss5_target_flags.flag(2**414, help_text="carton_pk=1614")
        flag_carton_mwm_monitor_m15_apogee_long_1_0_42 = sdss5_target_flags.flag(2**415, help_text="carton_pk=1615")
        flag_carton_mwm_monitor_m15_apogee_short_1_0_42 = sdss5_target_flags.flag(2**416, help_text="carton_pk=1616")
        flag_carton_mwm_wd_pwd_boss_1_0_42 = sdss5_target_flags.flag(2**417, help_text="carton_pk=1617")
        flag_carton_mwm_wd_gaia_boss_1_0_42 = sdss5_target_flags.flag(2**418, help_text="carton_pk=1618")
        flag_carton_mwm_cb_galex_mag_boss_1_0_42 = sdss5_target_flags.flag(2**419, help_text="carton_pk=1619")
        flag_carton_mwm_cb_galex_vol_boss_1_0_42 = sdss5_target_flags.flag(2**420, help_text="carton_pk=1620")
        flag_carton_mwm_cb_xmmom_boss_1_0_42 = sdss5_target_flags.flag(2**421, help_text="carton_pk=1621")
        flag_carton_mwm_cb_swiftuvot_boss_1_0_42 = sdss5_target_flags.flag(2**422, help_text="carton_pk=1622")
        flag_carton_mwm_astar_core_boss_1_0_43 = sdss5_target_flags.flag(2**423, help_text="carton_pk=1624")
        flag_carton_mwm_astar_core_boss_single_1_0_43 = sdss5_target_flags.flag(2**424, help_text="carton_pk=1625")
        flag_carton_mwm_bin_vis_apogee_1_0_44 = sdss5_target_flags.flag(2**425, help_text="carton_pk=1626")
        flag_carton_mwm_bin_vis_boss_1_0_44 = sdss5_target_flags.flag(2**426, help_text="carton_pk=1627")
        flag_carton_mwm_galactic_core_dist_apogee_1_0_44 = sdss5_target_flags.flag(2**427, help_text="carton_pk=1628")
        flag_carton_mwm_dust_core_dist_apogee_1_0_45 = sdss5_target_flags.flag(2**428, help_text="carton_pk=1631")
        flag_carton_manual_mwm_nsbh_apogee_1_0_46 = sdss5_target_flags.flag(2**429, help_text="carton_pk=1632")
        flag_carton_manual_mwm_nsbh_boss_1_0_46 = sdss5_target_flags.flag(2**430, help_text="carton_pk=1633")
        flag_carton_manual_mwm_validation_rv_apogee_1_0_46 = sdss5_target_flags.flag(2**431, help_text="carton_pk=1634")
        flag_carton_mwm_cb_cvcandidates_apogee_1_0_47 = sdss5_target_flags.flag(2**432, help_text="carton_pk=1636")
        flag_carton_mwm_cb_cvcandidates_boss_1_0_47 = sdss5_target_flags.flag(2**433, help_text="carton_pk=1637")
        flag_carton_mwm_legacy_ir2opt_boss_1_0_47 = sdss5_target_flags.flag(2**434, help_text="carton_pk=1638")
        flag_carton_bhm_rm_core_1_0_48 = sdss5_target_flags.flag(2**435, help_text="carton_pk=1639")
        flag_carton_bhm_rm_known_spec_1_0_48 = sdss5_target_flags.flag(2**436, help_text="carton_pk=1640")
        flag_carton_bhm_rm_var_1_0_48 = sdss5_target_flags.flag(2**437, help_text="carton_pk=1641")
        flag_carton_bhm_rm_ancillary_1_0_48 = sdss5_target_flags.flag(2**438, help_text="carton_pk=1642")
        flag_carton_mwm_tess_2min_apogee_1_0_49 = sdss5_target_flags.flag(2**439, help_text="carton_pk=1644")
        flag_carton_mwm_tess_rgb_apogee_1_0_49 = sdss5_target_flags.flag(2**440, help_text="carton_pk=1645")
        flag_carton_manual_mwm_planet_gaia_astrometry_apogee_1_0_46 = sdss5_target_flags.flag(2**441, help_text="carton_pk=1647")
        flag_carton_manual_mwm_planet_gpi_apogee_1_0_46 = sdss5_target_flags.flag(2**442, help_text="carton_pk=1648")
        flag_carton_manual_mwm_planet_harps_apogee_1_0_46 = sdss5_target_flags.flag(2**443, help_text="carton_pk=1649")
        flag_carton_manual_mwm_planet_known_apogee_1_0_46 = sdss5_target_flags.flag(2**444, help_text="carton_pk=1650")
        flag_carton_manual_mwm_planet_sophie_apogee_1_0_46 = sdss5_target_flags.flag(2**445, help_text="carton_pk=1651")
        flag_carton_manual_mwm_planet_sphere_apogee_1_0_46 = sdss5_target_flags.flag(2**446, help_text="carton_pk=1652")
        flag_carton_manual_mwm_planet_tess_eb_apogee_1_0_46 = sdss5_target_flags.flag(2**447, help_text="carton_pk=1653")
        flag_carton_manual_mwm_planet_tess_pc_apogee_1_0_46 = sdss5_target_flags.flag(2**448, help_text="carton_pk=1654")
        flag_carton_mwm_magcloud_agb_apogee_1_0_50 = sdss5_target_flags.flag(2**449, help_text="carton_pk=1657")
        flag_carton_mwm_magcloud_rgb_boss_1_0_50 = sdss5_target_flags.flag(2**450, help_text="carton_pk=1658")
        flag_carton_manual_mwm_planet_ca_legacy_apogee_1_0_46 = sdss5_target_flags.flag(2**451, help_text="carton_pk=1659")
        flag_carton_manual_mwm_planet_transiting_bd_apogee_1_0_46 = sdss5_target_flags.flag(2**452, help_text="carton_pk=1660")

    sdss4_apogee_target1_flags = BitField(default=0, help_text="SDSS4 APOGEE1 targeting flags (1/2)")
    sdss4_apogee_target2_flags = BitField(default=0, help_text="SDSS4 APOGEE1 targeting flags (2/2)")
    sdss4_apogee2_target1_flags = BitField(default=0, help_text="SDSS4 APOGEE2 targeting flags (1/3)")
    sdss4_apogee2_target2_flags = BitField(default=0, help_text="SDSS4 APOGEE2 targeting flags (2/3)")
    sdss4_apogee2_target3_flags = BitField(default=0, help_text="SDSS4 APOGEE2 targeting flags (3/3)")
    sdss4_apogee_member_flags = BitField(default=0, help_text="SDSS4 likely cluster/galaxy member flags")
    sdss4_apogee_extra_target_flags = BitField(default=0, help_text="SDSS4 target info (aka EXTRATARG)")
    
    # sdss4_apogee_target1_flags
    flag_sdss4_apogee_faint = sdss4_apogee_target1_flags.flag(2**0, help_text="Star selected in faint bin of its cohort")
    flag_sdss4_apogee_medium = sdss4_apogee_target1_flags.flag(2**1, help_text="Star selected in medium bin of its cohort")
    flag_sdss4_apogee_bright = sdss4_apogee_target1_flags.flag(2**2, help_text="Star selected in bright bin of its cohort")
    flag_sdss4_apogee_irac_dered = sdss4_apogee_target1_flags.flag(2**3, help_text="Selected w/ RJCE-IRAC dereddening")
    flag_sdss4_apogee_wise_dered = sdss4_apogee_target1_flags.flag(2**4, help_text="Selected w/ RJCE-WISE dereddening")
    flag_sdss4_apogee_sfd_dered = sdss4_apogee_target1_flags.flag(2**5, help_text="Selected w/ SFD dereddening")
    flag_sdss4_apogee_no_dered = sdss4_apogee_target1_flags.flag(2**6, help_text="Selected w/ no dereddening")
    flag_sdss4_apogee_wash_giant = sdss4_apogee_target1_flags.flag(2**7, help_text="Selected as giant using Washington photometry")
    flag_sdss4_apogee_wash_dwarf = sdss4_apogee_target1_flags.flag(2**8, help_text="Selected as dwarf using Washington photometry")
    flag_sdss4_apogee_sci_cluster = sdss4_apogee_target1_flags.flag(2**9, help_text="Selected as probable cluster member")
    flag_sdss4_apogee_extended = sdss4_apogee_target1_flags.flag(2**10, help_text="Extended object")
    flag_sdss4_apogee_short = sdss4_apogee_target1_flags.flag(2**11, help_text="Selected as 'short' (~3 visit) cohort target (includes 1-visit samples)")
    flag_sdss4_apogee_intermediate = sdss4_apogee_target1_flags.flag(2**12, help_text="Selected as 'intermediate' cohort (~6-visit) target")
    flag_sdss4_apogee_long = sdss4_apogee_target1_flags.flag(2**13, help_text="Selected as 'long' cohort (~12- or 24-visit) target")
    flag_sdss4_apogee_do_not_observe = sdss4_apogee_target1_flags.flag(2**14, help_text="Do not observe (again) -- undesired dwarf, galaxy, etc")
    flag_sdss4_apogee_serendipitous = sdss4_apogee_target1_flags.flag(2**15, help_text="Serendipitous interesting target to be re-observed")
    flag_sdss4_apogee_first_light = sdss4_apogee_target1_flags.flag(2**16, help_text="First Light plate target")
    flag_sdss4_apogee_ancillary = sdss4_apogee_target1_flags.flag(2**17, help_text="Ancillary target")
    flag_sdss4_apogee_m31_cluster = sdss4_apogee_target1_flags.flag(2**18, help_text="M31 Clusters (Allende Prieto, Schiavon, Bizyaev, OConnell, Shetrone)")
    flag_sdss4_apogee_mdwarf = sdss4_apogee_target1_flags.flag(2**19, help_text="RVs of M Dwarfs (Blake, Mahadevan, Hearty, Deshpande, Nidever, Bender, Crepp, Carlberg, Terrien, Schneider) -- both original list and second-round extension")
    flag_sdss4_apogee_hires = sdss4_apogee_target1_flags.flag(2**20, help_text="Stars with Optical Hi-Res Spectra (Fabbian, Allende Prieto, Smith, Cunha)")
    flag_sdss4_apogee_old_star = sdss4_apogee_target1_flags.flag(2**21, help_text="Oldest Stars in Galaxy (Harding, Johnson)")
    flag_sdss4_apogee_disk_red_giant = sdss4_apogee_target1_flags.flag(2**22, help_text="Ages/Compositions? of Disk Red Giants (Johnson, Epstein, Pinsonneault, Lai, Bird, Schonrich, Chiappini)")
    flag_sdss4_apogee_kepler_eb = sdss4_apogee_target1_flags.flag(2**23, help_text="Kepler EBs (Mahadevan, Fleming, Bender, Deshpande, Hearty, Nidever, Terrien)")
    flag_sdss4_apogee_gc_pal1 = sdss4_apogee_target1_flags.flag(2**24, help_text="Globular Cluster Pops in the MW (Simmerer, Ivans, Shetrone)")
    flag_sdss4_apogee_massive_star = sdss4_apogee_target1_flags.flag(2**25, help_text="Massive Stars in the MW (Herrero, Garcia-Garcia, Ramirez-Alegria)")
    flag_sdss4_apogee_sgr_dsph = sdss4_apogee_target1_flags.flag(2**26, help_text="Sgr (dSph) member")
    flag_sdss4_apogee_kepler_seismo = sdss4_apogee_target1_flags.flag(2**27, help_text="Kepler asteroseismology program target (Epstein)")
    flag_sdss4_apogee_kepler_host = sdss4_apogee_target1_flags.flag(2**28, help_text="Planet-host program target (Epstein)")
    flag_sdss4_apogee_faint_extra = sdss4_apogee_target1_flags.flag(2**29, help_text="'Faint' target in low-target-density fields")
    flag_sdss4_apogee_segue_overlap = sdss4_apogee_target1_flags.flag(2**30, help_text="SEGUE overlap")

    # sdss4_apogee_target2_flags
    # TODO: Check flag definitions, because it seems off-by-one for apogee_1m_targets!
    flag_sdss4_apogee_light_trap = sdss4_apogee_target2_flags.flag(2**0, help_text="Light trap")
    flag_sdss4_apogee_flux_standard = sdss4_apogee_target2_flags.flag(2**1, help_text="Flux standard")
    flag_sdss4_apogee_standard_star = sdss4_apogee_target2_flags.flag(2**2, help_text="Stellar abundance/parameters standard")
    flag_sdss4_apogee_rv_standard = sdss4_apogee_target2_flags.flag(2**3, help_text="RV standard")
    flag_sdss4_apogee_sky = sdss4_apogee_target2_flags.flag(2**4, help_text="Sky")
    flag_sdss4_apogee_sky_bad = sdss4_apogee_target2_flags.flag(2**5, help_text="Selected as sky but IDed as bad (via visual examination or observation)")
    flag_sdss4_apogee_guide_star = sdss4_apogee_target2_flags.flag(2**6, help_text="Guide star")
    flag_sdss4_apogee_bundle_hole = sdss4_apogee_target2_flags.flag(2**7, help_text="Bundle hole")
    flag_sdss4_apogee_telluric_bad = sdss4_apogee_target2_flags.flag(2**8, help_text="Selected as telluric std but IDed as too red (via SIMBAD or observation)")
    flag_sdss4_apogee_telluric = sdss4_apogee_target2_flags.flag(2**9, help_text="Hot (telluric) standard")
    flag_sdss4_apogee_calib_cluster = sdss4_apogee_target2_flags.flag(2**10, help_text="Known calibration cluster member")
    flag_sdss4_apogee_bulge_giant = sdss4_apogee_target2_flags.flag(2**11, help_text="Selected as probable giant in bulge")
    flag_sdss4_apogee_bulge_super_giant = sdss4_apogee_target2_flags.flag(2**12, help_text="Selected as probable supergiant in bulge")
    flag_sdss4_apogee_embedded_cluster_star = sdss4_apogee_target2_flags.flag(2**13, help_text="Young nebulous clusters (Covey, Tan)")
    flag_sdss4_apogee_long_bar = sdss4_apogee_target2_flags.flag(2**14, help_text="Milky Way Long Bar (Zasowski)")
    flag_sdss4_apogee_emission_star = sdss4_apogee_target2_flags.flag(2**15, help_text="Be Emission Line Stars (Chojnowski, Whelan)")
    flag_sdss4_apogee_mir_cluster_star = sdss4_apogee_target2_flags.flag(2**16, help_text="Outer Disk MIR Clusters (Beaton)")
    flag_sdss4_apogee_rv_monitor_ic348 = sdss4_apogee_target2_flags.flag(2**17, help_text="RV Variability in IC348 (Nidever, Covey)")
    flag_sdss4_apogee_rv_monitor_kepler = sdss4_apogee_target2_flags.flag(2**18, help_text="RV Variability for Kepler Planet Hosts and Binaries (Deshpande, Fleming, Mahadevan)")
    flag_sdss4_apogee_ges_calibrate = sdss4_apogee_target2_flags.flag(2**19, help_text="Gaia-ESO calibration targets")
    flag_sdss4_apogee_bulge_rv_verify = sdss4_apogee_target2_flags.flag(2**20, help_text="RV Verification (Nidever)")
    flag_sdss4_apogee_1m_target = sdss4_apogee_target2_flags.flag(2**21, help_text="Selected as a 1-m target (Holtzman)")

    # sdss4_apogee2_target1_flags
    flag_sdss4_apogee2_onebit_gt_0_5 = sdss4_apogee2_target1_flags.flag(2**0, help_text="Selected in single (J-Ks)o > 0.5 color bin")
    flag_sdss4_apogee2_twobit_0_5_to_0_8 = sdss4_apogee2_target1_flags.flag(2**1, help_text="Selected in 'blue' 0.5 < (J-Ks)o < 0.8 color bin")
    flag_sdss4_apogee2_twobit_gt_0_8 = sdss4_apogee2_target1_flags.flag(2**2, help_text="Selected in 'red' (J-Ks)o > 0.8 color bin")
    flag_sdss4_apogee2_irac_dered = sdss4_apogee2_target1_flags.flag(2**3, help_text="Selected with RJCE-IRAC dereddening")
    flag_sdss4_apogee2_wise_dered = sdss4_apogee2_target1_flags.flag(2**4, help_text="Selected with RJCE-WISE dereddening")
    flag_sdss4_apogee2_sfd_dered = sdss4_apogee2_target1_flags.flag(2**5, help_text="Selected with SFD_EBV dereddening")
    flag_sdss4_apogee2_no_dered = sdss4_apogee2_target1_flags.flag(2**6, help_text="Selected with no dereddening")
    flag_sdss4_apogee2_wash_giant = sdss4_apogee2_target1_flags.flag(2**7, help_text="Selected as Wash+DDO51 photometric giant")
    flag_sdss4_apogee2_wash_dwarf = sdss4_apogee2_target1_flags.flag(2**8, help_text="Selected as Wash+DDO51 photometric dwarf")
    flag_sdss4_apogee2_sci_cluster = sdss4_apogee2_target1_flags.flag(2**9, help_text="Science cluster candidate member")
    flag_sdss4_apogee2_cluster_candidate = sdss4_apogee2_target1_flags.flag(2**10, help_text="Selected as globular cluster candidate")
    flag_sdss4_apogee2_short = sdss4_apogee2_target1_flags.flag(2**11, help_text="Selected as part of a short cohort")
    flag_sdss4_apogee2_medium = sdss4_apogee2_target1_flags.flag(2**12, help_text="Selected as part of a medium cohort")
    flag_sdss4_apogee2_long = sdss4_apogee2_target1_flags.flag(2**13, help_text="Selected as part of a long cohort")
    flag_sdss4_apogee2_normal_sample = sdss4_apogee2_target1_flags.flag(2**14, help_text="Selected as part of the random sample")
    flag_sdss4_apogee2_manga_led = sdss4_apogee2_target1_flags.flag(2**15, help_text="Star on a shared MaNGA-led design")
    flag_sdss4_apogee2_onebin_gt_0_3 = sdss4_apogee2_target1_flags.flag(2**16, help_text="Selected in single (J-Ks)o > 0.3 color bin")
    flag_sdss4_apogee2_wash_noclass = sdss4_apogee2_target1_flags.flag(2**17, help_text="Selected because it has no W+D classification")
    flag_sdss4_apogee2_stream_member = sdss4_apogee2_target1_flags.flag(2**18, help_text="Selected as confirmed halo tidal stream member")
    flag_sdss4_apogee2_stream_candidate = sdss4_apogee2_target1_flags.flag(2**19, help_text="Selected as potential halo tidal stream member (based on photometry)")
    flag_sdss4_apogee2_dsph_member = sdss4_apogee2_target1_flags.flag(2**20, help_text="Selected as confirmed dSph member (non Sgr)")
    flag_sdss4_apogee2_dsph_candidate = sdss4_apogee2_target1_flags.flag(2**21, help_text="Selected as potential dSph member (non Sgr) (based on photometry)")
    flag_sdss4_apogee2_magcloud_member = sdss4_apogee2_target1_flags.flag(2**22, help_text="Selected as confirmed Mag Cloud member")
    flag_sdss4_apogee2_magcloud_candidate = sdss4_apogee2_target1_flags.flag(2**23, help_text="Selected as potential Mag Cloud member (based on photometry)")
    flag_sdss4_apogee2_rrlyr = sdss4_apogee2_target1_flags.flag(2**24, help_text="Selected as an RR Lyrae star")
    flag_sdss4_apogee2_bulge_rc = sdss4_apogee2_target1_flags.flag(2**25, help_text="Selected as a bulge candidate RC star")
    flag_sdss4_apogee2_sgr_dsph = sdss4_apogee2_target1_flags.flag(2**26, help_text="Selected as confirmed Sgr core/stream member")
    flag_sdss4_apogee2_apokasc_giant = sdss4_apogee2_target1_flags.flag(2**27, help_text="Selected as part of APOKASC 'giant' sample")
    flag_sdss4_apogee2_apokasc_dwarf = sdss4_apogee2_target1_flags.flag(2**28, help_text="Selected as part of APOKASC 'dwarf' sample")
    flag_sdss4_apogee2_faint_extra = sdss4_apogee2_target1_flags.flag(2**29, help_text="'Faint' star (fainter than cohort limit; not required to reach survey S/N requirement)")
    flag_sdss4_apogee2_apokasc = sdss4_apogee2_target1_flags.flag(2**30, help_text="Selected as part of the APOKASC program (incl. seismic/gyro targets and others, both the Cygnus field and K2)")

    # sdss4_apogee2_target2_flags
    flag_sdss4_apogee2_k2_gap = sdss4_apogee2_target2_flags.flag(2**0, help_text="K2 Galactic Archeology Program Star")
    flag_sdss4_apogee2_ccloud_as4 = sdss4_apogee2_target2_flags.flag(2**1, help_text="California Cloud target")
    flag_sdss4_apogee2_standard_star = sdss4_apogee2_target2_flags.flag(2**2, help_text="Stellar parameters/abundance standard")
    flag_sdss4_apogee2_rv_standard = sdss4_apogee2_target2_flags.flag(2**3, help_text="Stellar RV standard")
    flag_sdss4_apogee2_sky = sdss4_apogee2_target2_flags.flag(2**4, help_text="Sky fiber")
    flag_sdss4_apogee2_external_calib = sdss4_apogee2_target2_flags.flag(2**5, help_text="External survey calibration target (generic flag; others below dedicated to specific surveys)")
    flag_sdss4_apogee2_internal_calib = sdss4_apogee2_target2_flags.flag(2**6, help_text="Internal survey calibration target (observed in at least 2 of: APOGEE-1, -2N, -2S)")
    flag_sdss4_apogee2_disk_substructure_member = sdss4_apogee2_target2_flags.flag(2**7, help_text="Bright time extension: outer disk substructure (Triand, GASS, and A13) members")
    flag_sdss4_apogee2_disk_substructure_candidate = sdss4_apogee2_target2_flags.flag(2**8, help_text="Bright time extension: outer disk substructure (Triand, GASS, and A13) candidates")
    flag_sdss4_apogee2_telluric = sdss4_apogee2_target2_flags.flag(2**9, help_text="Telluric standard")
    flag_sdss4_apogee2_calib_cluster = sdss4_apogee2_target2_flags.flag(2**10, help_text="Selected as calibration cluster member")
    flag_sdss4_apogee2_k2_planet_host = sdss4_apogee2_target2_flags.flag(2**11, help_text="Planet host in the K2 field")
    flag_sdss4_apogee2_tidal_binary = sdss4_apogee2_target2_flags.flag(2**12, help_text="Ancillary KOI Program (Simonian)")
    flag_sdss4_apogee2_literature_calib = sdss4_apogee2_target2_flags.flag(2**13, help_text="Overlap with high-resolution literature studies")
    flag_sdss4_apogee2_ges_overlap = sdss4_apogee2_target2_flags.flag(2**14, help_text="Overlap with Gaia-ESO")
    flag_sdss4_apogee2_argos_overlap = sdss4_apogee2_target2_flags.flag(2**15, help_text="Overlap with ARGOS")
    flag_sdss4_apogee2_gaia_overlap = sdss4_apogee2_target2_flags.flag(2**16, help_text="Overlap with Gaia")
    flag_sdss4_apogee2_galah_overlap = sdss4_apogee2_target2_flags.flag(2**17, help_text="Overlap with GALAH")
    flag_sdss4_apogee2_rave_overlap = sdss4_apogee2_target2_flags.flag(2**18, help_text="Overlap with RAVE")
    flag_sdss4_apogee2_commis_south_spec = sdss4_apogee2_target2_flags.flag(2**19, help_text="Commissioning special targets for APOGEE2S")
    flag_sdss4_apogee2_halo_member = sdss4_apogee2_target2_flags.flag(2**20, help_text="Halo Member")
    flag_sdss4_apogee2_halo_candidate = sdss4_apogee2_target2_flags.flag(2**21, help_text="Halo Candidate")
    flag_sdss4_apogee2_1m_target = sdss4_apogee2_target2_flags.flag(2**22, help_text="Selected as a 1-m target")
    flag_sdss4_apogee2_mod_bright_limit = sdss4_apogee2_target2_flags.flag(2**23, help_text="Selected in a cohort with H>10 rather than H>7")
    flag_sdss4_apogee2_cis = sdss4_apogee2_target2_flags.flag(2**24, help_text="Carnegie program target")
    flag_sdss4_apogee2_cntac = sdss4_apogee2_target2_flags.flag(2**25, help_text="Chilean community target")
    flag_sdss4_apogee2_external = sdss4_apogee2_target2_flags.flag(2**26, help_text="Proprietary external target")
    flag_sdss4_apogee2_cvz_as4_obaf = sdss4_apogee2_target2_flags.flag(2**27, help_text="OBAF stars selected for multi-epoc observations Andrew T.")
    flag_sdss4_apogee2_cvz_as4_gi = sdss4_apogee2_target2_flags.flag(2**28, help_text="Submitted program to be on CVZ plate (Known Planets, ATL, Tayar-Subgiant, Canas-Cool-dwarf)")
    flag_sdss4_apogee2_cvz_as4_ctl = sdss4_apogee2_target2_flags.flag(2**29, help_text="Filler CTL star selected from the TESS Input Catalog")
    flag_sdss4_apogee2_cvz_as4_giant = sdss4_apogee2_target2_flags.flag(2**30, help_text="Filler Giant selected with RPMJ")

    # sdss4_apogee2_target3_flags
    flag_sdss4_apogee2_koi = sdss4_apogee2_target3_flags.flag(2**0, help_text="Selected as part of the long cadence KOI study")
    flag_sdss4_apogee2_eb = sdss4_apogee2_target3_flags.flag(2**1, help_text="Selected as part of the EB program")
    flag_sdss4_apogee2_koi_control = sdss4_apogee2_target3_flags.flag(2**2, help_text="Selected as part of the long cadence KOI 'control sample'")
    flag_sdss4_apogee2_mdwarf = sdss4_apogee2_target3_flags.flag(2**3, help_text="Selected as part of the M dwarf study")
    flag_sdss4_apogee2_substellar_companions = sdss4_apogee2_target3_flags.flag(2**4, help_text="Selected as part of the substellar companion search")
    flag_sdss4_apogee2_young_cluster = sdss4_apogee2_target3_flags.flag(2**5, help_text="Selected as part of the young cluster study (IN-SYNC)")
    flag_sdss4_apogee2_k2 = sdss4_apogee2_target3_flags.flag(2**6, help_text="Selected as part of the K2 program (BTX and Main Survey)")
    flag_sdss4_apogee2_object = sdss4_apogee2_target3_flags.flag(2**7, help_text="This object is an APOGEE-2 target")
    flag_sdss4_apogee2_ancillary = sdss4_apogee2_target3_flags.flag(2**8, help_text="Selected as an ancillary target")
    flag_sdss4_apogee2_massive_star = sdss4_apogee2_target3_flags.flag(2**9, help_text="Selected as part of the Massive Star program")
    flag_sdss4_apogee2_qso = sdss4_apogee2_target3_flags.flag(2**10, help_text="Ancillary QSO pilot program (Albareti)")
    flag_sdss4_apogee2_cepheid = sdss4_apogee2_target3_flags.flag(2**11, help_text="Ancillary Cepheid sparse targets (Beaton)")
    flag_sdss4_apogee2_low_av_windows = sdss4_apogee2_target3_flags.flag(2**12, help_text="Ancillary Deep Disk sample (Bovy)")
    flag_sdss4_apogee2_be_star = sdss4_apogee2_target3_flags.flag(2**13, help_text="Ancillary ASHELS sample (Chojnowski)")
    flag_sdss4_apogee2_young_moving_group = sdss4_apogee2_target3_flags.flag(2**14, help_text="Ancillary young moving group members (Downes)")
    flag_sdss4_apogee2_ngc6791 = sdss4_apogee2_target3_flags.flag(2**15, help_text="Ancillary NGC 6791 star (Geisler)")
    flag_sdss4_apogee2_label_star = sdss4_apogee2_target3_flags.flag(2**16, help_text="Ancillary Cannon calibrator Sample (Ness)")
    flag_sdss4_apogee2_faint_kepler_giants = sdss4_apogee2_target3_flags.flag(2**17, help_text="Ancillary APOKASC faint giants (Pinsonneault)")
    flag_sdss4_apogee2_w345 = sdss4_apogee2_target3_flags.flag(2**18, help_text="Ancillary W3/4/5 star forming complex (Roman-Lopes)")
    flag_sdss4_apogee2_massive_evolved = sdss4_apogee2_target3_flags.flag(2**19, help_text="Ancillary massive/evolved star targets (Stringfellow)")
    flag_sdss4_apogee2_extinction = sdss4_apogee2_target3_flags.flag(2**20, help_text="Ancillary extinction targets (Schlafly)")
    flag_sdss4_apogee2_kepler_mdwarf_koi = sdss4_apogee2_target3_flags.flag(2**21, help_text="Ancillary M dwarf targets (Smith)")
    flag_sdss4_apogee2_agb = sdss4_apogee2_target3_flags.flag(2**22, help_text="Ancillary AGB sample (Zamora)")
    flag_sdss4_apogee2_m33 = sdss4_apogee2_target3_flags.flag(2**23, help_text="Ancillary M33 Program (Anguiano)")
    flag_sdss4_apogee2_ultracool = sdss4_apogee2_target3_flags.flag(2**24, help_text="Ancillary Ultracool Dwarfs Program (Burgasser)")
    flag_sdss4_apogee2_distant_segue_giants = sdss4_apogee2_target3_flags.flag(2**25, help_text="Ancillary Distant SEGUE Giants program (Harding)")
    flag_sdss4_apogee2_cepheid_mapping = sdss4_apogee2_target3_flags.flag(2**26, help_text="Ancillary Cepheid Mapping Program (Inno)")
    flag_sdss4_apogee2_sa57 = sdss4_apogee2_target3_flags.flag(2**27, help_text="Ancillary SA57 Kapteyn Field Program (Majewski)")
    flag_sdss4_apogee2_k2_mdwarf = sdss4_apogee2_target3_flags.flag(2**28, help_text="Ancillary K2 M dwarf Program (Smith)")
    flag_sdss4_apogee2_rvvar = sdss4_apogee2_target3_flags.flag(2**29, help_text="Ancillary RV Variables Program (Troup)")
    flag_sdss4_apogee2_m31 = sdss4_apogee2_target3_flags.flag(2**30, help_text="Ancillary M31 Program (Zasowski)")

    # sdss4_apogee_extra_target_flags
    flag_sdss4_apogee_not_main = sdss4_apogee_extra_target_flags.flag(2**0, help_text="Not a main sample target")
    flag_sdss4_apogee_commissioning = sdss4_apogee_extra_target_flags.flag(2**1, help_text="Commissioning observation")
    flag_sdss4_apogee_telluric = sdss4_apogee_extra_target_flags.flag(2**2, help_text="Targeted as telluric")
    flag_sdss4_apogee_apo1m = sdss4_apogee_extra_target_flags.flag(2**3, help_text="APO/NMSU 1M observation")
    flag_sdss4_apogee_duplicate = sdss4_apogee_extra_target_flags.flag(2**4, help_text="Non-primary (not highest S/N) duplicate, excluding SDSS-5")

    # sdss4_apogee_member_flags
    flag_sdss4_apogee_member_m92 = sdss4_apogee_member_flags.flag(2**0, help_text="Likely member of M92")
    flag_sdss4_apogee_member_m15 = sdss4_apogee_member_flags.flag(2**1, help_text="Likely member of M15")
    flag_sdss4_apogee_member_m53 = sdss4_apogee_member_flags.flag(2**2, help_text="Likely member of M53")
    flag_sdss4_apogee_member_ngc_5466 = sdss4_apogee_member_flags.flag(2**3, help_text="Likely member of NGC 5466")
    flag_sdss4_apogee_member_ngc_4147 = sdss4_apogee_member_flags.flag(2**4, help_text="Likely member of NGC 4147")
    flag_sdss4_apogee_member_m2 = sdss4_apogee_member_flags.flag(2**5, help_text="Likely member of M2")
    flag_sdss4_apogee_member_m13 = sdss4_apogee_member_flags.flag(2**6, help_text="Likely member of M13")
    flag_sdss4_apogee_member_m3 = sdss4_apogee_member_flags.flag(2**7,  help_text="Likely member of M3")
    flag_sdss4_apogee_member_m5 = sdss4_apogee_member_flags.flag(2**8,  help_text="Likely member of M5")
    flag_sdss4_apogee_member_m12 = sdss4_apogee_member_flags.flag(2**9,  help_text="Likely member of M12")
    flag_sdss4_apogee_member_m107 = sdss4_apogee_member_flags.flag(2**10, help_text="Likely member of M107")
    flag_sdss4_apogee_member_m71 = sdss4_apogee_member_flags.flag(2**11, help_text="Likely member of M71")
    flag_sdss4_apogee_member_ngc_2243 = sdss4_apogee_member_flags.flag(2**12, help_text="Likely member of NGC 2243")
    flag_sdss4_apogee_member_be29 = sdss4_apogee_member_flags.flag(2**13, help_text="Likely member of Be29")
    flag_sdss4_apogee_member_ngc_2158 = sdss4_apogee_member_flags.flag(2**14,  help_text="Likely member of NGC 2158")
    flag_sdss4_apogee_member_m35 = sdss4_apogee_member_flags.flag(2**15,  help_text="Likely member of M35")
    flag_sdss4_apogee_member_ngc_2420 = sdss4_apogee_member_flags.flag(2**16,  help_text="Likely member of NGC 2420")
    flag_sdss4_apogee_member_ngc_188 = sdss4_apogee_member_flags.flag(2**17, help_text="Likely member of NGC 188")
    flag_sdss4_apogee_member_m67 = sdss4_apogee_member_flags.flag(2**18, help_text="Likely member of M67")
    flag_sdss4_apogee_member_ngc_7789 = sdss4_apogee_member_flags.flag(2**19, help_text="Likely member of NGC 7789")
    flag_sdss4_apogee_member_pleiades = sdss4_apogee_member_flags.flag(2**20, help_text="Likely member of Pleiades")
    flag_sdss4_apogee_member_ngc_6819 = sdss4_apogee_member_flags.flag(2**21, help_text="Likely member of NGC 6819")
    flag_sdss4_apogee_member_coma_berenices = sdss4_apogee_member_flags.flag(2**22, help_text="Likely member of Coma Berenices")
    flag_sdss4_apogee_member_ngc_6791 = sdss4_apogee_member_flags.flag(2**23, help_text="Likely member of NGC 6791")
    flag_sdss4_apogee_member_ngc_5053 = sdss4_apogee_member_flags.flag(2**24, help_text="Likely member of NGC 5053")
    flag_sdss4_apogee_member_m68 = sdss4_apogee_member_flags.flag(2**25, help_text="Likely member of M68")
    flag_sdss4_apogee_member_ngc_6397 = sdss4_apogee_member_flags.flag(2**26, help_text="Likely member of NGC 6397")
    flag_sdss4_apogee_member_m55 = sdss4_apogee_member_flags.flag(2**27, help_text="Likely member of M55")
    flag_sdss4_apogee_member_ngc_5634 = sdss4_apogee_member_flags.flag(2**28, help_text="Likely member of NGC 5634")
    flag_sdss4_apogee_member_m22 = sdss4_apogee_member_flags.flag(2**29, help_text="Likely member of M22")
    flag_sdss4_apogee_member_m79 = sdss4_apogee_member_flags.flag(2**30, help_text="Likely member of M79")
    flag_sdss4_apogee_member_ngc_3201 = sdss4_apogee_member_flags.flag(2**31, help_text="Likely member of NGC 3201")
    flag_sdss4_apogee_member_m10 = sdss4_apogee_member_flags.flag(2**32, help_text="Likely member of M10")
    flag_sdss4_apogee_member_ngc_6752 = sdss4_apogee_member_flags.flag(2**33,help_text="Likely member of NGC 6752")
    flag_sdss4_apogee_member_omega_centauri = sdss4_apogee_member_flags.flag(2**34, help_text="Likely member of Omega Centauri")
    flag_sdss4_apogee_member_m54 = sdss4_apogee_member_flags.flag(2**35, help_text="Likely member of M54")
    flag_sdss4_apogee_member_ngc_6229 = sdss4_apogee_member_flags.flag(2**36, help_text="Likely member of NGC 6229")
    flag_sdss4_apogee_member_pal5 = sdss4_apogee_member_flags.flag(2**37, help_text="Likely member of Pal5")
    flag_sdss4_apogee_member_ngc_6544 = sdss4_apogee_member_flags.flag(2**38, help_text="Likely member of NGC 6544")
    flag_sdss4_apogee_member_ngc_6522 = sdss4_apogee_member_flags.flag(2**39, help_text="Likely member of NGC 6522")
    flag_sdss4_apogee_member_ngc_288 = sdss4_apogee_member_flags.flag(2**40, help_text="Likely member of NGC 288")
    flag_sdss4_apogee_member_ngc_362 = sdss4_apogee_member_flags.flag(2**41, help_text="Likely member of NGC 362")
    flag_sdss4_apogee_member_ngc_1851 = sdss4_apogee_member_flags.flag(2**42, help_text="Likely member of NGC 1851")
    flag_sdss4_apogee_member_m4 = sdss4_apogee_member_flags.flag(2**43, help_text="Likely member of M4")
    flag_sdss4_apogee_member_ngc_2808 = sdss4_apogee_member_flags.flag(2**44, help_text="Likely member of NGC 2808")
    flag_sdss4_apogee_member_pal6 = sdss4_apogee_member_flags.flag(2**45, help_text="Likely member of Pal6")
    flag_sdss4_apogee_member_47tuc = sdss4_apogee_member_flags.flag(2**46, help_text="Likely member of 47 Tucane")
    flag_sdss4_apogee_member_pal1 = sdss4_apogee_member_flags.flag(2**47, help_text="Likely member of Pal1")
    flag_sdss4_apogee_member_ngc_6539 = sdss4_apogee_member_flags.flag(2**48, help_text="Likely member of NGC 6539")
    flag_sdss4_apogee_member_ngc_6388 = sdss4_apogee_member_flags.flag(2**49, help_text="Likely member of NGC 6388")
    flag_sdss4_apogee_member_ngc_6441 = sdss4_apogee_member_flags.flag(2**50, help_text="Likely member of NGC 6441")
    flag_sdss4_apogee_member_ngc_6316 = sdss4_apogee_member_flags.flag(2**51, help_text="Likely member of NGC 6316")
    flag_sdss4_apogee_member_ngc_6760 = sdss4_apogee_member_flags.flag(2**52, help_text="Likely member of NGC 6760")
    flag_sdss4_apogee_member_ngc_6553 = sdss4_apogee_member_flags.flag(2**53, help_text="Likely member of NGC 6553")
    flag_sdss4_apogee_member_ngc_6528 = sdss4_apogee_member_flags.flag(2**54, help_text="Likely member of NGC 6528")
    flag_sdss4_apogee_member_draco = sdss4_apogee_member_flags.flag(2**55, help_text="Likely member of Draco")
    flag_sdss4_apogee_member_urminor = sdss4_apogee_member_flags.flag(2**56, help_text="Likely member of Ursa Minor")
    flag_sdss4_apogee_member_bootes1 = sdss4_apogee_member_flags.flag(2**57, help_text="Likely member of Bootes 1")
    flag_sdss4_apogee_member_sexans = sdss4_apogee_member_flags.flag(2**58, help_text="Likely member of Sextans")
    flag_sdss4_apogee_member_fornax = sdss4_apogee_member_flags.flag(2**59, help_text="Likely member of Fornax")
    flag_sdss4_apogee_member_sculptor = sdss4_apogee_member_flags.flag(2**60, help_text="Likely member of Sculptor")
    flag_sdss4_apogee_member_carina = sdss4_apogee_member_flags.flag(2**61, help_text="Likely member of Carina")



    #> Astrometry
    ra = FloatField(null=True, help_text="Right ascension [deg]")
    dec = FloatField(null=True, help_text="Declination [deg]")
    plx = FloatField(null=True, help_text="Parallax [mas]")
    e_plx = FloatField(null=True, help_text="Error on parallax [mas]")
    pmra = FloatField(null=True, help_text="Proper motion in RA [mas/yr]")
    e_pmra = FloatField(null=True, help_text="Error on proper motion in RA [mas/yr]")
    pmde = FloatField(null=True, help_text="Proper motion in DEC [mas/yr]")
    e_pmde = FloatField(null=True, help_text="Error on proper motion in DEC [mas/yr]")
    gaia_v_rad = FloatField(null=True, help_text="Gaia radial velocity [km/s]")
    gaia_e_v_rad = FloatField(null=True, help_text="Error on Gaia radial velocity [km/s]")

    # A decision was made here.
    # It would be nice to keep the original field names from each photometric survey so that
    # users know exactly which column means what. In other words, "do we be internally 
    # consistent with naming things, or be consistent with the original names?".
    
    # Unfortunately, some of the original field names are longer than 8 characters, so we 
    # would end up with many HIERARCH cards if we kept the original names. There might be
    # some other downsides if we wrote code that relied on some of those naming conventions.
    # For example, if bitfields always have the suffix `_flags` and then we wanted to create
    # documentation for any flag set (based on the `_flags` suffix instead of BitField type)
    # then some flagging things would not be documented. 

    # Neither avenue is clearly better, so we make a decision, document it, and live with it.
    # For Gaia, we use `_mag`. For 2MASS we use `_mag`. 
    # 
    # For unWISE they report fluxes, so we keep their naming convention where it fits within 
    # 8 characters, and document when the name differs from the original catalog.

    #> Gaia Photometry
    g_mag = FloatField(null=True, help_text="Gaia DR3 mean G band magnitude [mag]")
    bp_mag = FloatField(null=True, help_text="Gaia DR3 mean BP band magnitude [mag]")
    rp_mag = FloatField(null=True, help_text="Gaia DR3 mean RP band magnitude [mag]")

    #> 2MASS Photometry
    j_mag = FloatField(null=True, help_text="2MASS J band magnitude [mag]")
    e_j_mag = FloatField(null=True, help_text="Error on 2MASS J band magnitude [mag]")
    h_mag = FloatField(null=True, help_text="2MASS H band magnitude [mag]")
    e_h_mag = FloatField(null=True, help_text="Error on 2MASS H band magnitude [mag]")
    k_mag = FloatField(null=True, help_text="2MASS K band magnitude [mag]")
    e_k_mag = FloatField(null=True, help_text="Error on 2MASS K band magnitude [mag]")
    ph_qual = TextField(null=True, help_text="2MASS photometric quality flag")
    bl_flg = TextField(null=True, help_text="Number of components fit per band (JHK)")
    cc_flg = TextField(null=True, help_text="Contamination and confusion flag")
    #< See https://www.ipac.caltech.edu/2mass/releases/allsky/doc/sec2_2a.html 

    #> unWISE Photometry
    w1_flux = FloatField(null=True, help_text="W1 flux [Vega nMgy]")
    w1_dflux = FloatField(null=True, help_text="Error on W1 flux [Vega nMgy]")
    w2_flux = FloatField(null=True, help_text="W2 flux [Vega nMgy]")
    w2_dflux = FloatField(null=True, help_text="Error on W2 flux [Vega nMgy]")
    w1_frac = FloatField(null=True, help_text="Fraction of W1 flux from this object")
    w2_frac = FloatField(null=True, help_text="Fraction of W2 flux from this object")
    w1uflags = BitField(default=0, null=True, help_text="unWISE flags for W1")
    w2uflags = BitField(default=0, null=True, help_text="unWISE flags for W2")
    w1aflags = BitField(default=0, null=True, help_text="Additional flags for W1")
    w2aflags = BitField(default=0, null=True, help_text="Additional flags for W2")
    #< See https://catalog.unwise.me/catalogs.html
    
    flag_unwise_w1_in_core_or_wings = w1uflags.flag(2**0, "In core or wings")
    flag_unwise_w1_in_diffraction_spike = w1uflags.flag(2**1, "In diffraction spike")
    flag_unwise_w1_in_ghost = w1uflags.flag(2**2, "In ghost")
    flag_unwise_w1_in_first_latent = w1uflags.flag(2**3, "In first latent")
    flag_unwise_w1_in_second_latent = w1uflags.flag(2**4, "In second latent")
    flag_unwise_w1_in_circular_halo = w1uflags.flag(2**5, "In circular halo")
    flag_unwise_w1_saturated = w1uflags.flag(2**6, "Saturated")
    flag_unwise_w1_in_geometric_diffraction_spike = w1uflags.flag(2**7, "In geometric diffraction spike")
    
    flag_unwise_w2_in_core_or_wings = w2uflags.flag(2**0, "In core or wings")
    flag_unwise_w2_in_diffraction_spike = w2uflags.flag(2**1, "In diffraction spike")
    flag_unwise_w2_in_ghost = w2uflags.flag(2**2, "In ghost")
    flag_unwise_w2_in_first_latent = w2uflags.flag(2**3, "In first latent")
    flag_unwise_w2_in_second_latent = w2uflags.flag(2**4, "In second latent")
    flag_unwise_w2_in_circular_halo = w2uflags.flag(2**5, "In circular halo")
    flag_unwise_w2_saturated = w2uflags.flag(2**6, "Saturated")
    flag_unwise_w2_in_geometric_diffraction_spike = w2uflags.flag(2**7, "In geometric diffraction spike")
        
    flag_unwise_w1_in_bright_star_psf = w1aflags.flag(2**0, "In PSF of bright star falling off coadd")
    flag_unwise_w1_in_hyperleda_galaxy = w1aflags.flag(2**1, "In HyperLeda large galaxy")
    flag_unwise_w1_in_big_object = w1aflags.flag(2**2, "In \"big object\" (e.g., a Magellanic cloud)")
    flag_unwise_w1_pixel_in_very_bright_star_centroid = w1aflags.flag(2**3, "Pixel may contain the centroid of a very bright star")
    flag_unwise_w1_crowdsource_saturation = w1aflags.flag(2**4, "crowdsource considers this pixel potentially affected by saturation")
    flag_unwise_w1_possible_nebulosity = w1aflags.flag(2**5, "Pixel may contain nebulosity")
    flag_unwise_w1_no_aggressive_deblend = w1aflags.flag(2**6, "Sources in this pixel will not be aggressively deblended")
    flag_unwise_w1_candidate_sources_must_be_sharp = w1aflags.flag(2**7, "Candidate sources in this pixel must be \"sharp\" to be optimized")

    flag_unwise_w2_in_bright_star_psf = w2aflags.flag(2**0, "In PSF of bright star falling off coadd")
    flag_unwise_w2_in_hyperleda_galaxy = w2aflags.flag(2**1, "In HyperLeda large galaxy")
    flag_unwise_w2_in_big_object = w2aflags.flag(2**2, "In \"big object\" (e.g., a Magellanic cloud)")
    flag_unwise_w2_pixel_in_very_bright_star_centroid = w2aflags.flag(2**3, "Pixel may contain the centroid of a very bright star")
    flag_unwise_w2_crowdsource_saturation = w2aflags.flag(2**4, "crowdsource considers this pixel potentially affected by saturation")
    flag_unwise_w2_possible_nebulosity = w2aflags.flag(2**5, "Pixel may contain nebulosity")
    flag_unwise_w2_no_aggressive_deblend = w2aflags.flag(2**6, "Sources in this pixel will not be aggressively deblended")
    flag_unwise_w2_candidate_sources_must_be_sharp = w2aflags.flag(2**7, "Candidate sources in this pixel must be \"sharp\" to be optimized")

    #> GLIMPSE Photometry
    mag4_5 = FloatField(null=True, help_text="IRAC band 4.5 micron magnitude [mag]")
    d4_5m = FloatField(null=True, help_text="Error on IRAC band 4.5 micron magnitude [mag]")
    rms_f4_5 = FloatField(null=True, help_text="RMS deviations from final flux [mJy]")
    sqf_4_5 = BitField(default=0, help_text="Source quality flag for IRAC band 4.5 micron")
    mf4_5 = BitField(default=0, help_text="Flux calculation method flag")
    csf = BitField(default=0, help_text="Close source flag")
    #< See https://irsa.ipac.caltech.edu/data/SPITZER/GLIMPSE/gator_docs/

    flag_glimpse_poor_dark_pixel_current = sqf_4_5.flag(2**0, "Poor pixels in dark current")
    flag_glimpse_flat_field_questionable = sqf_4_5.flag(2**1, "Flat field applied using questionable value")
    flag_glimpse_latent_image = sqf_4_5.flag(2**2, "Latent image")
    flag_glimpse_saturated_star_correction = sqf_4_5.flag(2**3, "Sat star correction")
    flag_glimpse_muxbleed_correction_applied = sqf_4_5.flag(2**6, "Muxbleed correction applied")
    flag_glimpse_hot_or_dead_pixels = sqf_4_5.flag(2**7, "Hot, dead or otherwise unacceptable pixel")
    flag_glimpse_muxbleed_significant = sqf_4_5.flag(2**8, "Muxbleed > 3-sigma above the background")
    flag_glimpse_allstar_tweak_positive = sqf_4_5.flag(2**9, "Allstar tweak positive")
    flag_glimpse_allstar_tweak_negative = sqf_4_5.flag(2**10, "Allstar tweak negative")
    flag_glimpse_confusion_in_band_merge = sqf_4_5.flag(2**12, "Confusion in in-band merge")
    flag_glimpse_confusion_in_cross_band_merge = sqf_4_5.flag(2**13, "Confusion in cross-band merge")
    flag_glimpse_column_pulldown_correction = sqf_4_5.flag(2**14, "Column pulldown correction")
    flag_glimpse_banding_correction = sqf_4_5.flag(2**15, "Banding correction")
    flag_glimpse_stray_light = sqf_4_5.flag(2**16, "Stray light")
    flag_glimpse_no_nonlinear_correction = sqf_4_5.flag(2**18, "Nonlinear correction not applied")
    flag_glimpse_saturated_star_wing_region = sqf_4_5.flag(2**19, "Saturated star wing region")
    flag_glimpse_pre_lumping_in_band_merge = sqf_4_5.flag(2**20, "Pre-lumping in in-band merge")
    flag_glimpse_post_lumping_in_cross_band_merge = sqf_4_5.flag(2**21, "Post-lumping in cross-band merge")
    flag_glimpse_edge_of_frame = sqf_4_5.flag(2**29, "Edge of frame (within 3 pixels of edge)")
    flag_glimpse_truth_list = sqf_4_5.flag(2**30, "Truth list (for simulated data)")

    flag_glimpse_no_source_within_3_arcsecond = csf.flag(2**0, "No sources in GLIMPSE within 3\" of the source")
    flag_glimpse_1_source_within_2p5_and_3_arcsecond = csf.flag(2**1, "1 sources in GLIMPSE between 2.5\" and 3\" of the source")
    flag_glimpse_2_sources_within_2_and_2p5_arcsecond = csf.flag(2**2, "2 sources in GLIMPSE within 2\" and 2.5\" of the source")
    flag_glimpse_3_sources_within_1p5_and_2_arcsecond = csf.flag(2**3, "3 sources in GLIMPSE within 1.5\" and 2\" of the source")
    flag_glimpse_4_sources_within_1_and_1p5_arcsecond = csf.flag(2**4, "4 sources in GLIMPSE within 1\" and 1.5\" of the source")
    flag_glimpse_5_sources_within_0p5_and_1_arcsecond = csf.flag(2**5, "5 sources in GLIMPSE within 0.5\" and 1.0\" of the source")
    flag_glimpse_6_sources_within_0p5_arcsecond = csf.flag(2**6, "6 sources in GLIMPSE within 0.5\" of this source")

    #> Gaia XP Stellar Parameters (Zhang, Green & Rix 2023)
    zgr_teff = FloatField(null=True, help_text=Glossary.teff)
    zgr_e_teff = FloatField(null=True, help_text=Glossary.e_teff)
    zgr_logg = FloatField(null=True, help_text=Glossary.logg)
    zgr_e_logg = FloatField(null=True, help_text=Glossary.e_logg)
    zgr_fe_h = FloatField(null=True, help_text=Glossary.fe_h)
    zgr_e_fe_h = FloatField(null=True, help_text=Glossary.e_fe_h)
    zgr_e = FloatField(null=True, help_text="Extinction [mag]")
    zgr_e_e = FloatField(null=True, help_text="Error on extinction [mag]")
    zgr_plx = FloatField(null=True, help_text=Glossary.plx)
    zgr_e_plx = FloatField(null=True, help_text=Glossary.e_plx)
    zgr_teff_confidence = FloatField(null=True, help_text="Confidence estimate in TEFF")
    zgr_logg_confidence = FloatField(null=True, help_text="Confidence estimate in LOGG")
    zgr_fe_h_confidence = FloatField(null=True, help_text="Confidence estimate in FE_H")
    zgr_ln_prior = FloatField(null=True, help_text="Log prior probability")
    zgr_chi2 = FloatField(null=True, help_text=Glossary.chi2)
    zgr_quality_flags = BitField(default=0, help_text="Quality flags")
    # See https://zenodo.org/record/7811871
 

    @property
    def cartons(self):
        """ Return the cartons that this source is assigned. """
        return (
            Carton
            .select()
            .where(Carton.pk << self.carton_primary_keys)
        )
    

    @property
    def carton_primary_keys(self):
        """ Return the primary keys of the cartons that this source is assigned. """
        i, carton_pks, cur_size = (0, [], len(self.carton_flags._buffer))
        while True:
            byte_num, byte_offset = divmod(i, 8)
            if byte_num >= cur_size:
                break
            if bool(self.carton_flags._buffer[byte_num] & (1 << byte_offset)):
                carton_pks.append(i)
            i += 1
        return tuple(carton_pks)


    @hybrid_method
    def in_carton(self, carton):
        """
        An expression to evaluate whether this source is assigned to the given carton.
        
        :param carton:
            A `Carton` or carton primary key.
        """
        carton_pk = carton.pk if isinstance(carton, Carton) else carton
        return (
            (fn.length(self.carton_flags) > int(carton_pk / 8))
        &   (fn.get_bit(self.carton_flags, carton_pk) > 0)
        )
    

    @hybrid_method
    def in_any_carton(self, *cartons):
        """An expression to evaluate whether this source is assigned to any of the given cartons."""
        return fn.OR(*[self.in_carton(carton) for carton in cartons])


    @property
    def spectra(self):
        """A generator that yields all spectra associated with this source."""
        for expr, column in self.dependencies():
            if Spectrum in column.model.__mro__[1:]:
                yield from column.model.select().where(expr)
